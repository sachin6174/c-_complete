1
00:00:01,450 --> 00:00:07,060
Everyone, so in this lecture, we're going to discuss the problem, we need to find the sum of numbers

2
00:00:07,180 --> 00:00:14,320
from one doing OK, so end will be given as input to us and we need to iterate over all the numbers

3
00:00:14,410 --> 00:00:16,960
from one to N and add them up.

4
00:00:17,560 --> 00:00:25,690
For example, if an as forward, we will start from one, we will add two, we will add three and we

5
00:00:25,690 --> 00:00:27,220
will add for this.

6
00:00:27,220 --> 00:00:34,870
Some comes out to be an OK, this is what we need to do and we need to come up with apologized for the

7
00:00:34,870 --> 00:00:35,140
same.

8
00:00:36,010 --> 00:00:40,480
One thing to observe in this problem is that we are repeating a task.

9
00:00:42,090 --> 00:00:48,420
Again and again, OK, so what we are doing, we are maintaining of some the the some is initially zero.

10
00:00:49,880 --> 00:00:55,760
Then in the next step, we are adding one to it, some becomes one in the next year, adding to do it.

11
00:00:57,550 --> 00:01:01,720
In the next hour, we're adding three to it in the next hour, we're writing for do it again.

12
00:01:01,990 --> 00:01:03,880
So what is the word that is getting repeated?

13
00:01:04,500 --> 00:01:07,210
I think the current number, that is what we are doing.

14
00:01:07,990 --> 00:01:14,770
And finally, when we reach for, we stop and we print out the smartest thing we need to see how we

15
00:01:14,770 --> 00:01:19,630
can implement the repeal statement using of logic.

16
00:01:20,180 --> 00:01:23,860
And when will you work with programming languages?

17
00:01:23,890 --> 00:01:26,650
We will see that there is a concept of a loop.

18
00:01:27,550 --> 00:01:34,210
OK, so there is a follow that is a while loop, so there are different ways of implementing the repeat

19
00:01:34,210 --> 00:01:34,730
instruction.

20
00:01:34,750 --> 00:01:34,990
OK.

21
00:01:35,440 --> 00:01:39,130
So let us see how we can repeat some work inside a flow chart.

22
00:01:39,730 --> 00:01:41,920
So we'll try to draw flowchart for the team.

23
00:01:42,550 --> 00:01:43,360
We will start.

24
00:01:44,840 --> 00:01:45,140
OK.

25
00:01:46,080 --> 00:01:52,010
And the next step would be to read the well, you often will read the value of an.

26
00:01:53,210 --> 00:01:59,720
And now what we want to do that was and is for someone to look in and is for what do you want to do?

27
00:02:00,440 --> 00:02:06,440
You want to have the value of some in the memory that is in the beginning, OK?

28
00:02:07,010 --> 00:02:10,760
What you will do, you will create a bucket called some inside the memory.

29
00:02:11,390 --> 00:02:13,130
The value of the sum would be zero.

30
00:02:13,280 --> 00:02:14,270
So how do we do it?

31
00:02:15,320 --> 00:02:17,600
OK, we have something called as a some.

32
00:02:18,570 --> 00:02:21,690
And the value of that sum is currently zero.

33
00:02:23,120 --> 00:02:29,420
And I also need to know what is the current number, so we know that we are starting from a value that

34
00:02:29,420 --> 00:02:30,360
is equal to one.

35
00:02:30,950 --> 00:02:31,580
Let us see.

36
00:02:31,970 --> 00:02:36,170
I denotes the current number and the value of the current number is one.

37
00:02:36,290 --> 00:02:41,150
So will initialize that we can say, OK, we have the current number that is equal to one.

38
00:02:42,180 --> 00:02:44,430
We want to do certain work repeatedly.

39
00:02:44,820 --> 00:02:47,940
So what we will I'll show you how to implement a loop.

40
00:02:48,900 --> 00:02:55,230
So here we will put a decision box and we will check if the value of I.

41
00:02:57,080 --> 00:02:58,640
If this is less than equal doing.

42
00:02:59,810 --> 00:03:05,630
If done that is, yes, then what we will do, we will add this item or something.

43
00:03:06,110 --> 00:03:11,450
OK, so what we will do, we will say OK, some equals some less I.

44
00:03:12,830 --> 00:03:18,800
We have added the wealth I to the son and we will update with.

45
00:03:20,300 --> 00:03:23,000
We will talk, I know, becomes a call to I +1.

46
00:03:23,540 --> 00:03:27,620
And again will come back to this particular point.

47
00:03:28,760 --> 00:03:35,480
So this these three boxes, they will formal, OK, we will see how, but if done, there is no that

48
00:03:35,480 --> 00:03:43,340
means the value of the current number has exceeded the value of and then what we will will print the

49
00:03:43,340 --> 00:03:44,090
value of some.

50
00:03:46,430 --> 00:03:48,290
And then we will stop.

51
00:03:49,440 --> 00:03:51,000
Now we will stop.

52
00:03:55,410 --> 00:04:03,240
Now you may ask how how this is going to calculate the sum, OK, that this part is called as a loop

53
00:04:04,020 --> 00:04:04,950
inside the loop.

54
00:04:06,030 --> 00:04:07,950
There are other things.

55
00:04:08,160 --> 00:04:10,980
So this thing is known as the stopping criteria.

56
00:04:11,400 --> 00:04:13,710
It tells when to stop this loop.

57
00:04:14,580 --> 00:04:16,680
This is the work that we are doing.

58
00:04:17,690 --> 00:04:21,080
And this is a big statement inside the loop.

59
00:04:21,260 --> 00:04:21,590
OK.

60
00:04:22,100 --> 00:04:28,650
And these are the initial values that we have decided, OK, we will start from equal to one.

61
00:04:28,670 --> 00:04:30,590
The sum is zero, so let's see what happens.

62
00:04:31,050 --> 00:04:32,960
Initially, Summit zero is one.

63
00:04:33,770 --> 00:04:34,550
Here we come.

64
00:04:34,550 --> 00:04:37,310
Here we take is one less than equal to Ford.

65
00:04:37,610 --> 00:04:38,570
The answer is yes.

66
00:04:38,960 --> 00:04:40,130
We update our sum.

67
00:04:40,130 --> 00:04:41,630
So sum becomes, well, how much?

68
00:04:42,080 --> 00:04:42,880
Some blasÃ©.

69
00:04:42,900 --> 00:04:44,390
So the new value of some is no.

70
00:04:44,390 --> 00:04:47,600
One, and I become like, Where do I +1?

71
00:04:47,600 --> 00:04:49,150
The new value of I is now two.

72
00:04:49,980 --> 00:04:51,050
OK, this is some.

73
00:04:51,050 --> 00:04:51,710
This is a.

74
00:04:53,310 --> 00:04:57,720
Now again, we go here, we check, is Eliza inequality doing?

75
00:04:58,560 --> 00:04:59,520
The answer is yes.

76
00:04:59,520 --> 00:05:07,170
Two is less than equal before the Sun becomes one +2 three, and the value of AI becomes a plus one

77
00:05:07,170 --> 00:05:08,160
that is also three.

78
00:05:08,760 --> 00:05:15,840
Again, we go here is three less than equal to four, and that is yes, the sum becomes six and the

79
00:05:15,840 --> 00:05:17,160
value of AI becomes four.

80
00:05:17,640 --> 00:05:20,970
Again, we go here is four less than equal to four.

81
00:05:21,240 --> 00:05:27,060
The answer is yes, then becomes six plus four 10, and the value of AI becomes five.

82
00:05:27,630 --> 00:05:31,080
And this is where your condition will break.

83
00:05:31,450 --> 00:05:33,150
OK, this is weird.

84
00:05:33,870 --> 00:05:38,580
Now, the value of AI is five and the value of an is four.

85
00:05:38,670 --> 00:05:43,000
So what we will do will come out of this front, so we will enter this code.

86
00:05:43,620 --> 00:05:48,120
This branch of code, we will print the sum the value of some bucket of been.

87
00:05:48,690 --> 00:05:53,700
This value would get printed as an output and we will stop.

88
00:05:53,730 --> 00:05:54,060
OK.

89
00:05:54,510 --> 00:05:58,290
So this is how easy it is to implement a loop using a flowchart.

90
00:05:58,830 --> 00:06:04,410
So any time you're implementing a loop, take it off three three four things the initial condition,

91
00:06:04,950 --> 00:06:11,130
the stopping criteria, the work that needs to be repeated inside the loop and the update.

92
00:06:11,130 --> 00:06:13,530
OK, that's all for this video.

93
00:06:13,620 --> 00:06:18,600
I hope you understood how to implement a repeat instruction using a loop.

94
00:06:18,690 --> 00:06:19,230
That's all.

95
00:06:19,230 --> 00:06:19,710
Thank you.
