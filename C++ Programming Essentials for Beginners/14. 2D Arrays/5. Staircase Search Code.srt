1
00:00:01,570 --> 00:00:05,530
I so let us discuss the implementation of staircase search.

2
00:00:05,860 --> 00:00:08,290
And let's begin with the coding part.

3
00:00:08,930 --> 00:00:16,030
What I need is I need to write a method that returns the indices of the given element like in there,

4
00:00:16,030 --> 00:00:18,070
done maybe a bit of intent.

5
00:00:19,090 --> 00:00:23,170
The bed is a very kind of fertilizer that can store two entities.

6
00:00:23,740 --> 00:00:32,380
So we are going to return up it from a function, our staircase search, and we are getting the matrix

7
00:00:32,620 --> 00:00:33,460
that is at a.

8
00:00:35,300 --> 00:00:39,350
And we are getting the number of those and we are getting the number of columns and we are getting the

9
00:00:39,350 --> 00:00:39,920
key element.

10
00:00:40,940 --> 00:00:43,280
So what we can do, we can assume that.

11
00:00:45,520 --> 00:00:49,630
The smallest element in the area would be this one, and the largest element would be this one.

12
00:00:50,260 --> 00:00:57,340
If your output is not lying in this range, then we can say we can return a bit of minus one and minus

13
00:00:57,340 --> 00:00:57,760
one, OK?

14
00:00:58,120 --> 00:01:07,270
This case we can handle later on later, if the element is not present, return a bit of minus one and

15
00:01:07,270 --> 00:01:07,930
minus one.

16
00:01:07,990 --> 00:01:18,670
So maybe we can say if your key element is less than this one element that is added of a zero zero.

17
00:01:21,510 --> 00:01:29,850
The key element is greater than the largest that is at the off and minus one and minus one.

18
00:01:30,630 --> 00:01:33,770
In that case, you went in little diner minus one and minus one.

19
00:01:33,780 --> 00:01:36,030
That means the element does not only.

20
00:01:36,960 --> 00:01:40,620
Otherwise we can implement a staircase search.

21
00:01:41,950 --> 00:01:45,190
So maybe I can take a call to zero.

22
00:01:45,360 --> 00:01:52,330
I'm cold and minus one, so that means we are starting from this element that this is so this should

23
00:01:52,330 --> 00:01:52,660
be.

24
00:01:53,590 --> 00:01:54,460
And minus one.

25
00:01:54,490 --> 00:01:54,790
OK.

26
00:01:55,750 --> 00:01:57,140
We are starting from this element.

27
00:01:57,460 --> 00:02:01,240
And what we're going to begin to while is less than.

28
00:02:03,370 --> 00:02:08,920
And and there is greater than equal to zero.

29
00:02:09,740 --> 00:02:13,150
Basically, your surge is going to start from here.

30
00:02:13,660 --> 00:02:18,640
In the worst case, your surge should not go beyond this boundary, OK, so we should not cross this

31
00:02:18,640 --> 00:02:18,890
at all.

32
00:02:19,270 --> 00:02:20,800
And we should not cross this column.

33
00:02:21,340 --> 00:02:24,490
So that's why we're saying it is less than an OK.

34
00:02:26,020 --> 00:02:32,260
Because this is the truth, and this does not we should not go beyond this point because we are coming,

35
00:02:32,260 --> 00:02:40,540
we are going backwards and downwards to downward limiters and and the backward limit is minus one.

36
00:02:41,110 --> 00:02:47,230
We should not cross zero and we should not cross and minus one that that is what is the meaning.

37
00:02:48,340 --> 00:02:56,950
So now I think if at the current index, I have that particular element, if my divided equals to my

38
00:02:56,950 --> 00:02:59,470
key, then I can jump on the bed.

39
00:03:00,400 --> 00:03:01,220
I got my g.

40
00:03:02,080 --> 00:03:07,480
Otherwise I can see as if of.

41
00:03:09,030 --> 00:03:10,680
Is greater than my key.

42
00:03:11,980 --> 00:03:17,860
That means we need to move one column backward, so we are going to do a minus minus.

43
00:03:18,460 --> 00:03:20,410
Otherwise, we are going to do.

44
00:03:22,020 --> 00:03:24,510
Increment the A-plus, plus, that's it.

45
00:03:26,680 --> 00:03:27,310
And.

46
00:03:29,020 --> 00:03:30,290
We should be done, OK.

47
00:03:30,820 --> 00:03:37,150
If we somehow had hit that, that means again, the element is not present and we can return minus one

48
00:03:37,150 --> 00:03:37,780
and minus one.

49
00:03:39,530 --> 00:03:41,480
Now, let us try to underscore.

50
00:03:41,510 --> 00:03:52,010
Maybe I can say, although I maybe I to bed of internet coordinates equals double staircase search.

51
00:03:52,550 --> 00:03:56,930
I give it, I give the end and maybe later is 33.

52
00:04:02,880 --> 00:04:06,120
But this matrix is nothing but the ad itself.

53
00:04:10,530 --> 00:04:10,980
Yes.

54
00:04:11,910 --> 00:04:12,840
So.

55
00:04:14,900 --> 00:04:17,480
Let us run the good and see the output has been.

56
00:04:19,160 --> 00:04:26,160
One last step is we need to bring these coordinates, so a bed is a special kind of a structure which

57
00:04:26,160 --> 00:04:27,330
has two attributes.

58
00:04:27,600 --> 00:04:31,740
One is known as forest and that is known as second.

59
00:04:32,280 --> 00:04:37,920
I want to bring coordinates, start first and coordinates start second and followed by end.

60
00:04:38,790 --> 00:04:41,430
So I want to see the output for, let's say, 33.

61
00:04:42,210 --> 00:04:46,930
Then let's run this code and we can to we're getting three comma one.

62
00:04:47,700 --> 00:04:52,360
Let's build it once and we're getting three comma one.

63
00:04:52,380 --> 00:04:54,670
That means zero one two three.

64
00:04:54,690 --> 00:04:58,410
Third row on the first column that is working perfectly fine.

65
00:04:58,830 --> 00:05:02,460
Maybe I want to search for, let's say, 27.

66
00:05:04,070 --> 00:05:04,970
Let's see the output.

67
00:05:10,060 --> 00:05:11,180
Zero, get second row.

68
00:05:11,860 --> 00:05:15,040
And as you read column there, you can see how easy it is.

69
00:05:15,190 --> 00:05:20,770
So this is the staircase search algorithm, and I hope it is clear to you.

70
00:05:21,040 --> 00:05:21,610
That's it.
