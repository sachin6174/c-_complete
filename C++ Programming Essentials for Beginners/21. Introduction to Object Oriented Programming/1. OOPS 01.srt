1
00:00:01,500 --> 00:00:06,480
Everyone in this section, we are going to talk about object oriented programming, which is a very

2
00:00:06,480 --> 00:00:13,500
important concept in programming, and we will not talk about any specific algorithms in this case.

3
00:00:14,040 --> 00:00:18,580
It's not about algorithms, it's it's about style of writing.

4
00:00:18,820 --> 00:00:25,110
OK, so right now, what we have seen, we have seen a functional style of writing code where for every

5
00:00:25,110 --> 00:00:27,000
logic we create a function.

6
00:00:27,510 --> 00:00:36,660
But in object oriented programming, the functions are tied around objects and we deal with these objects

7
00:00:36,660 --> 00:00:38,190
and the concept of classes.

8
00:00:38,650 --> 00:00:44,310
Let me tell you what is an object to object basically denotes an entity from a real world, OK?

9
00:00:44,670 --> 00:00:49,500
For example, let me give you one example let's say I'm using this digital pen.

10
00:00:49,950 --> 00:00:58,070
And now this digital pen has a software application in which I have different things or can.

11
00:00:58,080 --> 00:01:06,930
Maybe I have a digital pen object inside my software out, and this pen object has different attributes.

12
00:01:06,930 --> 00:01:09,390
For example, one attribute is color.

13
00:01:09,660 --> 00:01:13,020
OK, I want to use a little green color for writing.

14
00:01:13,380 --> 00:01:15,600
Maybe later on, I want to switch on the grid.

15
00:01:15,600 --> 00:01:18,390
OK, maybe I also have a property.

16
00:01:18,390 --> 00:01:19,260
Let's add thickness.

17
00:01:19,650 --> 00:01:23,180
What is the thickness of this pen so I can adjust this property?

18
00:01:23,190 --> 00:01:25,200
I contained this property to my pixel.

19
00:01:25,770 --> 00:01:32,760
OK, maybe I also have a function to set the color, or can I pass in some color?

20
00:01:32,790 --> 00:01:33,630
Maybe let's read.

21
00:01:34,440 --> 00:01:37,410
And that will change the color of this pen to read.

22
00:01:38,310 --> 00:01:43,440
Now what you can see is this pen object has certain properties.

23
00:01:44,590 --> 00:01:46,750
Or it has some attributes.

24
00:01:47,230 --> 00:01:47,550
OK.

25
00:01:50,050 --> 00:01:52,360
And it also has some methods.

26
00:01:52,730 --> 00:01:52,990
OK.

27
00:01:53,830 --> 00:01:56,710
Yeah, so these are some methods that this Ben has.

28
00:01:57,260 --> 00:02:02,170
And what you would have done is you would easily have defined different variables like string coloured

29
00:02:03,220 --> 00:02:04,690
string and thickness.

30
00:02:05,350 --> 00:02:05,680
OK.

31
00:02:06,280 --> 00:02:07,480
And some function.

32
00:02:09,120 --> 00:02:10,500
That color or something like that.

33
00:02:11,280 --> 00:02:12,660
So instead of.

34
00:02:14,000 --> 00:02:17,230
Making these different 30.

35
00:02:18,240 --> 00:02:19,080
This is a variable.

36
00:02:19,590 --> 00:02:26,190
Instead of making like different variables and they're stored what we are going to do, we are going

37
00:02:26,190 --> 00:02:28,020
to wrap it inside a single.

38
00:02:29,410 --> 00:02:33,010
We are going to wrap it inside a single class, which is known as spin.

39
00:02:33,220 --> 00:02:40,930
OK, so all these attributes and methods are tied with the entity that is open to Ben is a real world

40
00:02:40,930 --> 00:02:44,080
entity that we're depicting and saw fit.

41
00:02:44,110 --> 00:02:47,110
OK, so maybe let me give you another example.

42
00:02:47,110 --> 00:02:53,500
Let's say you are making an online shopping system and you want to implement the functionality for a

43
00:02:53,500 --> 00:02:54,170
shopping cart.

44
00:02:54,220 --> 00:02:54,520
OK.

45
00:02:55,960 --> 00:03:00,340
This shopping cart would also have certain attributes.

46
00:03:00,370 --> 00:03:04,690
Maybe it would have a list of items that you want to buy.

47
00:03:05,170 --> 00:03:05,470
OK?

48
00:03:06,100 --> 00:03:09,670
List of items that you want to buy it may have.

49
00:03:10,850 --> 00:03:17,870
The method to get the total sum, OK, this would be a method that will I trade on the list of items

50
00:03:17,870 --> 00:03:24,470
that we would have and it will find out the total and maybe there is a method that is known as applied

51
00:03:24,470 --> 00:03:24,980
discount.

52
00:03:25,190 --> 00:03:25,520
OK.

53
00:03:26,650 --> 00:03:33,160
So you can see all these methods and attributes are connected with one, an entity that is shopping

54
00:03:33,160 --> 00:03:33,430
cart.

55
00:03:33,460 --> 00:03:37,090
OK, so it doesn't make sense to make them as independent functions.

56
00:03:37,090 --> 00:03:42,640
We want to implement these functions as a part of a shopping cart because what we will do will define.

57
00:03:43,830 --> 00:03:49,220
The structure of the shopping cart, OK, how does the shopping cart look like, what it will contain

58
00:03:49,230 --> 00:03:53,220
and what are the methods that will operate on this particular data?

59
00:03:53,250 --> 00:03:53,520
OK.

60
00:03:53,730 --> 00:04:00,300
So later on in this course, we will build a small shopping cart backend using object oriented programming

61
00:04:00,300 --> 00:04:00,900
principles.

62
00:04:01,320 --> 00:04:05,850
But first, we will understand the basic concept of object oriented programming.

63
00:04:05,850 --> 00:04:09,540
So now I hope you understand the term entities in real world.

64
00:04:09,540 --> 00:04:12,100
OK, so I've given you two examples.

65
00:04:12,120 --> 00:04:12,390
OK.

66
00:04:12,750 --> 00:04:17,250
What we have learned is all the objects that we would make in the code.

67
00:04:17,310 --> 00:04:18,450
They will have two things.

68
00:04:18,450 --> 00:04:26,420
One is a state the state will store what data is present in that particular object and behavior.

69
00:04:26,550 --> 00:04:30,840
So these functions operate on this data, for example, in the case of a pen.

70
00:04:31,350 --> 00:04:35,250
The data is color of the pen and the thickness of the pen.

71
00:04:35,280 --> 00:04:35,610
OK.

72
00:04:36,330 --> 00:04:41,610
And the function is maybe you want to change the color, or maybe you want to change the thickness,

73
00:04:41,610 --> 00:04:42,120
OK?

74
00:04:42,540 --> 00:04:45,600
Or maybe you want to show the thickness.

75
00:04:45,610 --> 00:04:47,700
Maybe there will be a function that color.

76
00:04:47,760 --> 00:04:51,590
I want to see what color is currently selected in the pen object.

77
00:04:51,600 --> 00:04:51,840
OK?

78
00:04:52,800 --> 00:04:59,040
So this could be another so I have this software application, you can see it has a lot of colors available.

79
00:04:59,370 --> 00:05:03,520
Maybe I want to use this color by clicking this pink.

80
00:05:03,900 --> 00:05:07,890
The color of the pen will change to pink internally.

81
00:05:07,890 --> 00:05:16,650
What happened is it called the red color method of this pen object, and that changed the color property

82
00:05:16,650 --> 00:05:17,310
of the pen.

83
00:05:17,700 --> 00:05:18,870
But I'm going to pink.

84
00:05:19,260 --> 00:05:21,360
OK, this is what actually happened.

85
00:05:21,790 --> 00:05:24,720
We want to write such code for software applications.

86
00:05:25,590 --> 00:05:29,960
So now let us take another example of, let's say, a card object.

87
00:05:29,970 --> 00:05:37,740
So maybe you want to build a system for a software or a card shop or a card showroom?

88
00:05:38,520 --> 00:05:44,370
And then that would have, let's say, details about the card.

89
00:05:44,400 --> 00:05:49,860
OK, maybe you want to define a card class and that would have a name of the God color of the card,

90
00:05:49,860 --> 00:05:53,250
a model of the card, maybe a year of manufacturing.

91
00:05:54,420 --> 00:05:54,960
And so on.

92
00:05:54,990 --> 00:05:55,360
OK.

93
00:05:55,380 --> 00:06:03,870
A lot of details can be that and maybe there could be a function that could tell me whether this card

94
00:06:03,870 --> 00:06:09,720
is in stock or not, OK, or maybe what is the price of the car or maybe checkout?

95
00:06:10,170 --> 00:06:13,730
Maybe someone wants to buy this car, then maybe that is a checkout method.

96
00:06:14,810 --> 00:06:16,050
So God is a product, OK?

97
00:06:17,160 --> 00:06:18,630
So why do we need object?

98
00:06:18,990 --> 00:06:20,880
We need objects so that.

99
00:06:22,850 --> 00:06:28,610
We can write code that is related inside a single class, OK?

100
00:06:30,260 --> 00:06:35,260
And this will make the work of a programmer easy, maintainable.

101
00:06:36,180 --> 00:06:37,800
And we can.

102
00:06:39,610 --> 00:06:42,190
And it also provides that a lot of.

103
00:06:45,730 --> 00:06:53,710
And one very important feature of these object oriented programming is encapsulation, so encapsulation

104
00:06:53,710 --> 00:07:01,600
ensures that the data, the functions which operate on this data, they are in the same class.

105
00:07:02,080 --> 00:07:06,100
And this ensures modularity of the code.

106
00:07:06,790 --> 00:07:07,120
OK.

107
00:07:07,810 --> 00:07:08,530
And.

108
00:07:09,570 --> 00:07:11,730
And and we are not.

109
00:07:12,180 --> 00:07:18,990
And it also ensures that we are not able to interface with some other data that belong to some other

110
00:07:18,990 --> 00:07:23,910
class, OK, so it also provides protection against unauthorized access.

111
00:07:23,920 --> 00:07:26,340
Maybe this function is not written for this class.

112
00:07:26,760 --> 00:07:33,150
Maybe this is for Ben class and this function is for, let's say, some other product class.

113
00:07:33,450 --> 00:07:33,780
OK.

114
00:07:34,260 --> 00:07:37,230
This function cannot modify the date of this class.

115
00:07:37,830 --> 00:07:42,380
These functions, this function will modify the date of this class.

116
00:07:42,390 --> 00:07:48,030
Okay, so we can ensure that then capitulation is dead and.

117
00:07:49,170 --> 00:07:56,340
And this feature is also known as a data hiding or cave, yet hiding specific data, which is not relevant

118
00:07:56,340 --> 00:07:57,300
for that function.

119
00:07:57,330 --> 00:08:05,820
OK, so apart from it, there are other features of object oriented programming as well, such as inheritance

120
00:08:06,360 --> 00:08:10,440
polymorphism, which we are not going to talk right now.

121
00:08:10,680 --> 00:08:10,980
OK.

122
00:08:13,130 --> 00:08:19,310
So, but you can read about these features on your own as well, OK, so let's dive in to object oriented

123
00:08:19,310 --> 00:08:22,520
programming from the next lecture in more depth.
