1
00:00:01,860 --> 00:00:07,410
I would want to know we're going to talk about what exactly is a class and what is the meaning of object.

2
00:00:07,980 --> 00:00:14,420
So basically classes like a blueprint, OK, so a class does not take any memory.

3
00:00:14,430 --> 00:00:20,490
It's just a map that tells compiler to give, and you will construct some object by filling data in

4
00:00:20,490 --> 00:00:21,150
this class.

5
00:00:22,200 --> 00:00:29,040
That object is going to take memory classes used to define the blueprint for creating the object.

6
00:00:29,800 --> 00:00:36,750
So this is what, for example, when you make a map for at home, the actual map does not take up the

7
00:00:36,750 --> 00:00:37,770
space on the line.

8
00:00:38,100 --> 00:00:43,170
But when you construct your home after taking inspiration from that map.

9
00:00:43,590 --> 00:00:47,280
So that is the thing that actually takes space.

10
00:00:47,880 --> 00:00:54,690
OK, so the actual home is will be an object, and the map of that would be a class.

11
00:00:54,870 --> 00:00:55,170
OK.

12
00:00:55,500 --> 00:00:57,750
So this is what is going to happen in our case.

13
00:00:59,030 --> 00:01:03,590
So let's see, how do we write the code for a class?

14
00:01:03,740 --> 00:01:11,420
OK, so object, as I discussed, it is an instance of the class and it actually occupies some memory

15
00:01:11,660 --> 00:01:15,140
and we need to define classes to make object in the memory, OK?

16
00:01:15,320 --> 00:01:21,260
For example, I want to make object for, let's say, multiple cards.

17
00:01:21,470 --> 00:01:25,430
OK, I want to store information about records in the memory.

18
00:01:25,880 --> 00:01:28,250
Then let's say I'm creating an array of cards.

19
00:01:28,380 --> 00:01:30,110
Let's add this is God zero.

20
00:01:30,740 --> 00:01:31,850
This is God one.

21
00:01:32,300 --> 00:01:38,910
This is card to each of these object is going to have the same attributes.

22
00:01:38,930 --> 00:01:40,330
It is going to have a name.

23
00:01:40,340 --> 00:01:41,660
It is going to have a color.

24
00:01:42,200 --> 00:01:43,720
Again, it is going to have a name.

25
00:01:43,730 --> 00:01:47,280
It is going to have a color and moral maybe name, color more.

26
00:01:47,350 --> 00:01:50,840
Look, all of them are created from the same map.

27
00:01:50,930 --> 00:01:53,180
So we would have define a glass god.

28
00:01:54,570 --> 00:01:58,110
And we could have defined this as a name property.

29
00:01:58,410 --> 00:01:59,730
It has a property.

30
00:02:00,060 --> 00:02:03,890
It has a model property and it has some functions as well.

31
00:02:04,000 --> 00:02:05,340
OK, so.

32
00:02:06,470 --> 00:02:11,510
This code does not occupy a space, but when you create objects on this code, for example, I say,

33
00:02:11,510 --> 00:02:18,830
OK, I want to create a God, a certain name, certain color and fit certain model.

34
00:02:18,980 --> 00:02:23,060
Then this object is going to take place in the memory.

35
00:02:23,450 --> 00:02:25,250
So that's what I'm talking about.

36
00:02:26,460 --> 00:02:33,870
OK, now let's see actually how the court would look like data members to the information about the

37
00:02:33,870 --> 00:02:34,170
court.

38
00:02:34,380 --> 00:02:38,850
So it say we have a God on this God has some certain price.

39
00:02:38,910 --> 00:02:47,070
Certain morality and name of the God is a strength so that you can use that adultery or you can use

40
00:02:47,070 --> 00:02:48,030
a string as well.

41
00:02:48,140 --> 00:02:49,650
Well, maybe you can write string name.

42
00:02:52,740 --> 00:03:02,640
So I've written it ahead because later on, I want to teach a concept that is for which this name should

43
00:03:02,640 --> 00:03:03,360
be in it, OK?

44
00:03:04,360 --> 00:03:07,480
But you can take a drink as well, thing is working perfectly fine.

45
00:03:08,200 --> 00:03:11,180
So, OK, this is how you define.

46
00:03:11,200 --> 00:03:15,830
So we have a glass covered, followed by name of the glass, followed by the attributes.

47
00:03:16,360 --> 00:03:20,260
And here you close your curly brackets, followed by a semicolon.

48
00:03:20,260 --> 00:03:20,500
OK?

49
00:03:21,770 --> 00:03:29,510
Now, not just a tribute, as we discussed, we can also have methods inside the glass, OK, so maybe

50
00:03:30,530 --> 00:03:37,550
these are the methods that we have defined and there is also a concept of excess modifiers, OK?

51
00:03:37,940 --> 00:03:41,090
These data members, these are private by default.

52
00:03:42,290 --> 00:03:48,820
That means that this they're not visible outside the glass or and they're not visible outside the glass

53
00:03:48,830 --> 00:03:51,560
and public means they're also visible outside the glass.

54
00:03:51,770 --> 00:03:52,670
So in a glass.

55
00:03:53,090 --> 00:03:58,220
You can have a few things which are private and you are going to have few things with you which you

56
00:03:58,220 --> 00:04:00,710
want to expose to other classes and objects.

57
00:04:01,400 --> 00:04:04,610
So that data is known as public data.

58
00:04:04,820 --> 00:04:05,150
OK.

59
00:04:06,350 --> 00:04:10,160
You want to give certain methods using which you can work on this data.

60
00:04:11,340 --> 00:04:17,690
So you are exposing these methods on all the private data members and functions, they added, and so

61
00:04:17,700 --> 00:04:23,400
private insurers data hiding in public basically exposes data.

62
00:04:24,270 --> 00:04:31,410
Maybe what I want us to some other Glaeser object, I want to show the price of the car.

63
00:04:31,620 --> 00:04:38,250
OK, I want to display the detail of the car, but I don't want to make this public so that anyone outside

64
00:04:38,250 --> 00:04:42,060
this car can modify the price of the car.

65
00:04:42,070 --> 00:04:48,040
I don't want one any other cars to modify the price of the car and movies I did two minus one.

66
00:04:48,060 --> 00:04:48,830
Something like that.

67
00:04:48,840 --> 00:04:53,670
OK, I want that logic that we are part of the car class.

68
00:04:53,670 --> 00:04:59,250
OK, someone else should not modify the price of the morality of the car, because that's why we need

69
00:04:59,250 --> 00:05:02,460
to protect this data from getting overridden.

70
00:05:02,850 --> 00:05:04,200
But maybe someone does.

71
00:05:04,200 --> 00:05:06,320
I want to only read the price of the car.

72
00:05:06,330 --> 00:05:10,800
OK, then what we will do will create something like go and get price.

73
00:05:11,040 --> 00:05:11,790
It is a method.

74
00:05:13,120 --> 00:05:18,430
And this method is going to return the price, so it will ensure that the price variable is used only

75
00:05:18,430 --> 00:05:20,290
in read only mode.

76
00:05:20,350 --> 00:05:25,990
We are not going to give the right access for the price variable or the for the price property of the

77
00:05:25,990 --> 00:05:26,200
car.

78
00:05:26,230 --> 00:05:26,500
OK.

79
00:05:27,910 --> 00:05:35,260
So this is a concept of excess modifiers and these methods are not public and these are data members

80
00:05:35,260 --> 00:05:35,830
are private.

81
00:05:36,070 --> 00:05:37,990
A class will have certain data members.

82
00:05:37,990 --> 00:05:40,090
It will have certain member functions as well.

83
00:05:40,120 --> 00:05:40,390
OK.

84
00:05:42,190 --> 00:05:46,270
And now let us write some gold starting from the next liquid.

85
00:05:46,690 --> 00:05:51,100
And I hope you'll gordon basic understanding of classes and objects.
