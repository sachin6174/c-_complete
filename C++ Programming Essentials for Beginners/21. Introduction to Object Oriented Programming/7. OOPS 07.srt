1
00:00:02,300 --> 00:00:07,970
Everyone in this lecture, we're going to talk a little bit more about the corpulent in the last act

2
00:00:07,970 --> 00:00:10,850
of you saw this index gives us an edit.

3
00:00:10,880 --> 00:00:16,760
We will avoid it because we cannot copy the name of the ADI or we cannot

4
00:00:19,790 --> 00:00:21,300
assign something to the anymore.

5
00:00:21,370 --> 00:00:27,110
Because as at any time is a read-only, content to name here points to a memory.

6
00:00:27,110 --> 00:00:37,790
So we have a name and we have an editor whose name is exactly what we actually want to do is we want

7
00:00:37,790 --> 00:00:41,510
to copy the contents of this edit to the city.

8
00:00:42,140 --> 00:00:43,850
What we will do later this is the ABC.

9
00:00:44,450 --> 00:00:46,110
Then we will put ABC here, OK?

10
00:00:46,160 --> 00:00:46,880
So we'll see.

11
00:00:47,540 --> 00:00:48,440
Let us point.

12
00:00:48,680 --> 00:00:49,880
Let us copy.

13
00:00:51,240 --> 00:00:56,040
Using string copy and we will copy ex-Tottenham, that is the destination.

14
00:00:56,700 --> 00:00:58,800
And this is the source, ex-Tottenham is the source.

15
00:00:59,460 --> 00:01:02,730
If I do this and then my God, it is going to work perfectly fine.

16
00:01:03,840 --> 00:01:10,710
And if I show you the output now, we can see that even the name value is getting copied in the three

17
00:01:10,710 --> 00:01:12,420
object that we have created.

18
00:01:13,540 --> 00:01:22,060
And maybe you may say, OK, handy, Cam Dart, that that might be equal to, let's say, 1000, then

19
00:01:22,060 --> 00:01:23,800
this might be will also get upgraded.

20
00:01:24,580 --> 00:01:28,420
So if I did this, so you can see this has a different MRP.

21
00:01:29,950 --> 00:01:33,460
Now let's talk a little bit more about.

22
00:01:35,790 --> 00:01:36,120
What?

23
00:01:37,250 --> 00:01:37,520
Yeah.

24
00:01:37,550 --> 00:01:44,740
So now we want to actually talk about the concept that is shallow copy and copy to copy contractors

25
00:01:44,750 --> 00:01:46,520
working to create a copy of a given object.

26
00:01:47,030 --> 00:01:51,050
And but we need to define our copy constructor.

27
00:01:51,080 --> 00:01:54,620
If an object has pointers to dynamically allocated object.

28
00:01:55,160 --> 00:01:57,980
So this is a concept that I am going to discuss now.

29
00:01:58,190 --> 00:01:59,270
What is going to happen?

30
00:01:59,810 --> 00:02:04,220
Let me create a copy of this file and we will write a different code now.

31
00:02:06,240 --> 00:02:10,440
What we're going to do, we are going to instead of keeping us there together, we're actually going

32
00:02:10,440 --> 00:02:11,460
to keep a pointed.

33
00:02:13,120 --> 00:02:13,810
The word enemy.

34
00:02:14,140 --> 00:02:17,740
OK, so this Eddie will lie in a heap memory.

35
00:02:18,920 --> 00:02:26,720
So what I'm going to do instead of writing this name, I'm going to say, let us say this is something.

36
00:02:32,280 --> 00:02:35,730
So instead of saying this name begins, it is God's done name.

37
00:02:36,390 --> 00:02:43,110
And here we are getting appointed and we can say, OK, if you're getting a binder doing it at first

38
00:02:43,110 --> 00:02:44,790
we will allocate the city so I can.

39
00:02:44,790 --> 00:02:47,310
The name equals two new God.

40
00:02:47,790 --> 00:02:49,800
And how much space we will need.

41
00:02:49,800 --> 00:02:53,280
That will be a straight line off and +1.

42
00:02:53,880 --> 00:02:57,780
And then we are going to copy everything inside the name.

43
00:02:57,990 --> 00:03:03,510
OK, so first we are allocating the memory depending upon how big the name is.

44
00:03:03,510 --> 00:03:05,430
A little everything goes off land 50 now.

45
00:03:05,430 --> 00:03:10,020
If it is, if the name is, let's say, handycam or if it is GoPro.

46
00:03:10,560 --> 00:03:11,430
So we are going to.

47
00:03:12,610 --> 00:03:18,520
I look at a space of lint sticks by for this one, one for another character.

48
00:03:19,010 --> 00:03:24,460
So it's a dynamic area, so name is going to point to a dynamic that is going to store GoPro.

49
00:03:25,560 --> 00:03:32,720
And this lies on the hip, and this is one change that we need to make inside the contractor.

50
00:03:33,270 --> 00:03:37,800
And here also maybe what is going to happen?

51
00:03:37,830 --> 00:03:40,980
Let us just come under the carpet and but as of now?

52
00:03:42,370 --> 00:03:46,210
Because we want to learn about the concept.

53
00:03:46,900 --> 00:03:57,190
OK, so if I now say I want to change this version to go through it, so I have another camera, let

54
00:03:57,190 --> 00:03:57,640
me just.

55
00:04:00,540 --> 00:04:02,580
Segment this out as well.

56
00:04:03,940 --> 00:04:07,690
So I want to say I have a product that is this camera one.

57
00:04:08,080 --> 00:04:10,780
I have a camera.

58
00:04:11,350 --> 00:04:17,530
Also, there is an old camera, which is the same model of camera one.

59
00:04:18,940 --> 00:04:25,900
And now I'm going to say, let me update a particular name of the let me try to update the name of the

60
00:04:25,900 --> 00:04:28,450
old camera, maybe I want to make a GoPro eight.

61
00:04:29,290 --> 00:04:30,910
So what I will do?

62
00:04:32,260 --> 00:04:35,170
Let me try to expose a particular variable.

63
00:04:35,710 --> 00:04:37,900
Maybe I can give a function.

64
00:04:39,080 --> 00:04:45,170
Lloyd said name of the camera, and here I give God starred.

65
00:04:46,280 --> 00:04:46,760
Name.

66
00:04:47,700 --> 00:04:51,720
And I simply do I do still keep.

67
00:04:52,110 --> 00:04:58,500
I say name this arrow name and name, so I have created actually settled for the name.

68
00:04:59,130 --> 00:05:02,270
OK, so this is a setter for the name.

69
00:05:03,030 --> 00:05:11,790
Now what is going to happen if I say, let's say old camera Dart said name and I say, OK, go GoPro

70
00:05:11,790 --> 00:05:12,040
eight.

71
00:05:13,080 --> 00:05:15,900
It's a this is the name for the camera.

72
00:05:17,640 --> 00:05:18,330
That I know.

73
00:05:19,620 --> 00:05:20,760
Oh, yeah.

74
00:05:20,790 --> 00:05:22,540
Let's say this is a name for the camera.

75
00:05:22,560 --> 00:05:22,890
OK.

76
00:05:24,950 --> 00:05:32,630
So let me let me see if we can do something here again to Old Camera Dot.

77
00:05:36,780 --> 00:05:37,720
Sure, it is.

78
00:05:38,660 --> 00:05:40,860
And again, the camera dog showed it.

79
00:05:42,620 --> 00:05:49,520
So you can see we have used copy contracted to create the old camera and better contractor for the first

80
00:05:49,520 --> 00:05:49,730
one.

81
00:05:52,530 --> 00:05:54,630
This is a warning that we can ignore.

82
00:05:55,680 --> 00:05:57,150
And if I don't, the colonel.

83
00:06:04,850 --> 00:06:09,870
To know what you can see is the names of both the cameras have been changed.

84
00:06:10,320 --> 00:06:11,730
Ideally, this should not happen.

85
00:06:11,760 --> 00:06:17,190
OK, now what is actually happening at gold level is if this is GoPro it, this is GoPro eight.

86
00:06:17,610 --> 00:06:21,000
So if you're thinking that I have done something wrong?

87
00:06:21,330 --> 00:06:28,620
Let us also update the price of the old camera that said that one was cheap, maybe third selling price.

88
00:06:29,250 --> 00:06:31,190
And maybe it is just one thousand.

89
00:06:31,260 --> 00:06:31,710
Let's see.

90
00:06:34,680 --> 00:06:35,520
On the.

91
00:06:37,100 --> 00:06:38,000
Let's build a good.

92
00:06:41,030 --> 00:06:43,750
And if I show you, you're going to.

93
00:06:49,840 --> 00:06:57,130
The price of the old camera has been updated as 1000, whereas the price of the new camera is still

94
00:06:57,130 --> 00:07:01,150
26000 and the name of the old camera is GoPro eight.

95
00:07:01,540 --> 00:07:03,580
And this should have been GoPro nine.

96
00:07:04,970 --> 00:07:06,230
GoPro Hero nine.

97
00:07:06,440 --> 00:07:07,730
OK, so this was the.

98
00:07:08,570 --> 00:07:11,340
Now what actually happened, what happened behind the scenes?

99
00:07:11,360 --> 00:07:13,010
This is very important to understand.

100
00:07:13,700 --> 00:07:17,330
So let us see what is actually happening behind this entire story.

101
00:07:19,400 --> 00:07:25,040
So what they did, it called the default copy contractor, so we hired a camera.

102
00:07:25,970 --> 00:07:27,170
Object in the memory.

103
00:07:27,620 --> 00:07:31,640
This was camera and we created an old camera object.

104
00:07:32,940 --> 00:07:34,260
Using the camera object.

105
00:07:34,440 --> 00:07:36,240
So this is no old camera.

106
00:07:37,270 --> 00:07:37,600
OK.

107
00:07:38,990 --> 00:07:39,850
Old camera.

108
00:07:40,450 --> 00:07:42,640
So this was GoPro.

109
00:07:43,660 --> 00:07:44,100
Nine.

110
00:07:44,350 --> 00:07:47,240
And this was GoPro.

111
00:07:47,980 --> 00:07:53,500
How is this named stolen because of this name is actually a pointer that points to some memory.

112
00:07:53,650 --> 00:07:55,290
Let's add this addresses 100.

113
00:07:55,750 --> 00:07:59,560
And here we are storing the string GoPro eight, a GoPro nine.

114
00:08:01,110 --> 00:08:03,360
And this one is actually stored here, OK?

115
00:08:03,750 --> 00:08:10,500
And similarly, we have a price variable later 228 K and something something, and here also we have

116
00:08:10,500 --> 00:08:12,480
a name, we have a price.

117
00:08:13,630 --> 00:08:20,440
And then this object was created, everything was copied as it is, including the name some name property

118
00:08:20,440 --> 00:08:27,460
had a value hundred, so that was copied it rice was 28 K, not 28 gave us copied it.

119
00:08:27,970 --> 00:08:34,510
Then we called the method, said name for this one and we said, OK, let us change the name of this

120
00:08:34,510 --> 00:08:36,190
to go pro it so ordered happened.

121
00:08:36,700 --> 00:08:44,140
It was pointing to the same memory because the actual error was not copied, but instead.

122
00:08:45,760 --> 00:08:49,390
What happened instead, it actually copied the address.

123
00:08:49,480 --> 00:08:52,630
OK, so it actually copied the value that was there in the printer.

124
00:08:53,500 --> 00:08:57,040
So this happened because the copy was not copied was a shallow copy.

125
00:08:57,620 --> 00:08:58,800
This is known as a yellow copy.

126
00:08:58,810 --> 00:09:02,770
When we're not pointing the copying, the actual memory, you are describing the address.

127
00:09:03,430 --> 00:09:09,820
But then I did OK, let us update the prize to one key and let us agree to the name to go through it.

128
00:09:10,330 --> 00:09:13,900
Then it actually changed the name of this camera to go through it.

129
00:09:14,290 --> 00:09:18,040
And that change would reflect it as well and here as well.

130
00:09:18,190 --> 00:09:24,790
OK, so that is why you can see the price would remain the same, but the memory that was lying outside

131
00:09:24,790 --> 00:09:27,910
somewhere in the heap that was shared by the two objects.

132
00:09:28,330 --> 00:09:29,980
And this is causing problems, OK?

133
00:09:30,380 --> 00:09:31,900
So how we can handle this?

134
00:09:32,410 --> 00:09:37,630
The answer to this is we will actually create a deep copy and in order to create a deep copy what we

135
00:09:37,630 --> 00:09:42,190
need, we need our own copy constructor to do the work.

136
00:09:42,340 --> 00:09:42,640
OK.

137
00:09:43,510 --> 00:09:47,320
So what this contractor was doing, it was actually doing something like this.

138
00:09:47,890 --> 00:09:48,610
It was doing.

139
00:09:49,450 --> 00:09:50,560
Called starting.

140
00:09:51,250 --> 00:09:54,490
This work is done by this.

141
00:09:56,760 --> 00:10:03,630
OK, so this call, you can see it is building fine and this work is done by the shallow copy, so this

142
00:10:03,630 --> 00:10:06,300
is how exactly the shell logo is created.

143
00:10:06,300 --> 00:10:10,770
It just blindly copies all the values without looking at what memory should be copied and what should

144
00:10:10,770 --> 00:10:11,220
not be.

145
00:10:12,330 --> 00:10:14,970
So if I run this code, you will see the same output.

146
00:10:15,540 --> 00:10:20,460
The name is changing, but the price is not changing because price is in a different bucket, but the

147
00:10:20,460 --> 00:10:21,840
name is in the common bucket.

148
00:10:22,530 --> 00:10:23,700
So how do we handle this?

149
00:10:23,910 --> 00:10:24,900
How do we handle this?

150
00:10:25,380 --> 00:10:27,300
The idea here is you first.

151
00:10:30,180 --> 00:10:36,330
Behind this name, though, some new memory, so you should create a new memory, so a new guide of

152
00:10:36,810 --> 00:10:39,660
Esther Elion of ex-Tottenham Plus one.

153
00:10:40,380 --> 00:10:46,350
So you first create a new idea that means instead of using this arrow, we can name while copying will

154
00:10:46,350 --> 00:10:49,620
first create a new edit who was lent the same as this one.

155
00:10:49,860 --> 00:10:56,370
OK, then in this new idea, maybe this addresses 824, so this addresses 824.

156
00:10:56,970 --> 00:11:02,310
In this address, we will copy what is there in the original letter, so we will say, OK, let us copy

157
00:11:03,290 --> 00:11:04,430
as DCP, right?

158
00:11:05,130 --> 00:11:06,330
Let us go up in name.

159
00:11:06,600 --> 00:11:08,160
Whatever is the next name.

160
00:11:08,890 --> 00:11:10,470
Let's do the copy, OK?

161
00:11:11,040 --> 00:11:12,780
And now if I run the code.

162
00:11:15,000 --> 00:11:15,810
You will see.

163
00:11:17,240 --> 00:11:24,020
That the new name is appropriate for the old camera and the original one still remains.

164
00:11:24,200 --> 00:11:27,440
GoPro Hero nine this is a concept of deep copy.

165
00:11:27,440 --> 00:11:33,230
OK, so we we are now having to address this is GoPro eight, and this one was originally GoPro Hero

166
00:11:33,230 --> 00:11:33,530
nine.

167
00:11:34,010 --> 00:11:35,660
So it remains as it is.

168
00:11:36,020 --> 00:11:36,290
OK.

169
00:11:36,860 --> 00:11:40,970
This is what we have done in case of up using a deep copy contract.

170
00:11:41,420 --> 00:11:45,890
So I hope this concept is clear and this is what I wanted to teach you.

171
00:11:46,820 --> 00:11:53,840
So we need to define our own copy contract that if the object has pointers to dynamically allocate object,

172
00:11:54,230 --> 00:11:57,170
and that means a deep copy of the object is needed.

173
00:11:58,160 --> 00:12:00,590
So I hope you really understood this concept well now.

174
00:12:01,070 --> 00:12:03,380
And that's all for this lecture.

175
00:12:03,410 --> 00:12:05,870
So thank you and I will see you in the next video.
