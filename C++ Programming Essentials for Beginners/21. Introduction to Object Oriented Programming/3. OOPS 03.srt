1
00:00:02,440 --> 00:00:08,530
Everyone in this lecture, we're going to define a product class that will represent the product for

2
00:00:08,530 --> 00:00:09,430
a shopping website.

3
00:00:09,940 --> 00:00:11,980
Let us write a class product.

4
00:00:13,470 --> 00:00:15,080
And what we're going to do.

5
00:00:15,180 --> 00:00:21,420
We are going to say, let's assume that the product has four dead members or four properties, maybe

6
00:00:21,750 --> 00:00:28,920
each product has a unique I.D., each product has a unique name that is, let's have two hundred characters

7
00:00:28,920 --> 00:00:29,310
long.

8
00:00:30,260 --> 00:00:35,330
Each product has a MRP, and maybe it also has a selling price.

9
00:00:35,660 --> 00:00:38,420
OK, so let's say these are the four things.

10
00:00:39,220 --> 00:00:39,850
And.

11
00:00:43,010 --> 00:00:45,170
So what we're going to do.

12
00:00:45,200 --> 00:00:53,090
We are going to say, OK in the mean, let us define let us actually create a real product in the moment

13
00:00:53,160 --> 00:00:56,910
because we are going to product Gamera product is a glass.

14
00:00:56,930 --> 00:01:01,180
It does not take any memory unless you create the object out of it.

15
00:01:01,190 --> 00:01:05,030
So this camera is an object that you have created.

16
00:01:05,270 --> 00:01:05,570
OK.

17
00:01:06,230 --> 00:01:09,740
This camera is an object that you have created.

18
00:01:10,880 --> 00:01:14,650
So this camera is going to occupy some memory.

19
00:01:14,660 --> 00:01:23,600
So if I simply show it to you, see out size off camera, then you will see that it is going to take

20
00:01:23,600 --> 00:01:24,560
up some space.

21
00:01:25,010 --> 00:01:25,340
OK?

22
00:01:25,940 --> 00:01:33,130
So you can see it is taking Android 12 bytes, 200 bytes for NIM.

23
00:01:33,710 --> 00:01:34,070
OK.

24
00:01:34,730 --> 00:01:35,780
And for bytes.

25
00:01:35,780 --> 00:01:42,350
For this one, for byte, for this one and four bytes for this one total to one hundred and twelve bytes.

26
00:01:43,160 --> 00:01:46,150
So we have this product class now.

27
00:01:46,160 --> 00:01:48,520
This product object is containing folded.

28
00:01:49,000 --> 00:01:50,630
OK, so you can treat it like a bucket.

29
00:01:51,380 --> 00:01:58,100
It's like a variable in which now we have four subfields I.D. name.

30
00:01:59,500 --> 00:02:00,070
MRP.

31
00:02:01,380 --> 00:02:02,790
And selling price.

32
00:02:02,820 --> 00:02:10,860
OK, so if this is no product and the name of this product is not yet defined, but we say, OK, this

33
00:02:10,860 --> 00:02:16,130
variable that we are using in all this product is known as Gamera.

34
00:02:16,800 --> 00:02:23,240
If you want to get the MRP of the camera or the selling price of the camera, you can simply to see

35
00:02:23,250 --> 00:02:23,550
out.

36
00:02:26,470 --> 00:02:33,760
MRP camera dot and might be so using the DOT operator, we can access what is the MRP of this camera?

37
00:02:34,100 --> 00:02:41,050
For now, there is one problem that by default, as I said, all these data members, they are going

38
00:02:41,050 --> 00:02:41,860
to be private.

39
00:02:41,950 --> 00:02:44,980
You cannot access them directly outside this class.

40
00:02:45,580 --> 00:02:48,070
What you need to do, you need to make them public.

41
00:02:48,260 --> 00:02:51,790
So maybe I'm going to make the MRP as public.

42
00:02:52,670 --> 00:02:58,010
And the selling price as public, so anyone can read and write this and might be OK.

43
00:02:59,870 --> 00:03:04,190
So now what I can do is I can run this code again.

44
00:03:06,150 --> 00:03:11,100
And I'm getting zero, so maybe by default, we have not initialized either it is zero.

45
00:03:11,200 --> 00:03:12,870
It may be garbage as well, I don't know.

46
00:03:13,140 --> 00:03:13,440
OK.

47
00:03:13,830 --> 00:03:20,040
What I need to do, I need to first set the price of this camera so I can the camera dart and let it

48
00:03:20,110 --> 00:03:26,520
equals 200 and camera dart later selling price equals to 200.

49
00:03:26,670 --> 00:03:35,490
OK, now, although it is not practical, OK, so am I be currently selling price should always be less

50
00:03:35,490 --> 00:03:37,570
than equal to MRP.

51
00:03:37,590 --> 00:03:40,220
But here we don't have any tricks here.

52
00:03:40,230 --> 00:03:42,570
We don't have any tricks that we are doing.

53
00:03:42,570 --> 00:03:46,380
So we are simply saying, OK, Brent, the MRP of the camera.

54
00:03:47,830 --> 00:03:51,850
And we are saying, okay, let us print the selling price of the camera as well.

55
00:03:52,780 --> 00:03:57,010
OK, so selling price of the camera as well.

56
00:03:58,410 --> 00:04:01,500
Now, if I run this code and.

57
00:04:03,240 --> 00:04:06,870
You can see MRP is on and selling prices also.

58
00:04:09,370 --> 00:04:12,070
So this should be a selling price.

59
00:04:12,870 --> 00:04:19,810
What we are able to do, we are able to read and write the data members of this object, OK, so we

60
00:04:19,810 --> 00:04:24,010
are able to modify these two properties because they are public.

61
00:04:24,220 --> 00:04:24,520
OK.

62
00:04:26,390 --> 00:04:31,520
Now, making everything public is not recommended because.

63
00:04:33,660 --> 00:04:39,870
What can happen is anyone can change, and this could lead to wrong data, OK?

64
00:04:39,910 --> 00:04:43,560
This could cause inconsistencies in data.

65
00:04:44,490 --> 00:04:48,100
OK, because we want this tech to be enforced.

66
00:04:48,150 --> 00:04:50,760
We want to enforce this check.

67
00:04:51,060 --> 00:04:53,460
OK, we want to enforce this check.

68
00:04:54,130 --> 00:05:01,500
Know what we should do, what we don't want the 100 percent right access where we want to give a conditional

69
00:05:01,500 --> 00:05:01,930
access.

70
00:05:01,950 --> 00:05:06,420
We want to put some condition when the selling price of the product is updated.

71
00:05:06,420 --> 00:05:12,930
So what we will do will learn about the concept of getting settled very soon.

72
00:05:13,560 --> 00:05:21,050
And before that, we will learn about one more concept that is a concept concept of a contract treadmill.

73
00:05:22,820 --> 00:05:28,490
So let us discuss this concept from the next lecture on in this lecture, what I wanted to tell you,

74
00:05:28,880 --> 00:05:31,100
how to use the excess modifiers.

75
00:05:31,700 --> 00:05:37,540
So we have learned by default the data members are private and you can make some of the data members

76
00:05:37,640 --> 00:05:38,180
public.

77
00:05:38,750 --> 00:05:46,880
We have created class, we have created object and we try to update the data members by accessing them

78
00:05:46,880 --> 00:05:47,900
using a dart operator.

79
00:05:47,900 --> 00:05:49,340
OK, so this is what we have learned.

80
00:05:49,760 --> 00:05:52,280
Let us learn about more concepts in the next lecture.
