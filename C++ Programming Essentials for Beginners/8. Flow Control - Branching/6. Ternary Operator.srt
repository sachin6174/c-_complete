1
00:00:01,880 --> 00:00:05,000
Everyone in this lecture will talk about ternary operator.

2
00:00:05,330 --> 00:00:08,480
So let us first see how this operator is denoted.

3
00:00:09,170 --> 00:00:13,880
So this operator actually has a question mark on the column, right?

4
00:00:14,480 --> 00:00:24,140
And it also has we have to define a certain condition before the question mark condition means and an

5
00:00:24,140 --> 00:00:27,740
explanation that evaluates to true or false or something like this.

6
00:00:28,310 --> 00:00:33,260
An example of a condition would be, let's say, x x is greater than two something like that.

7
00:00:33,800 --> 00:00:35,660
So here you will define some statement.

8
00:00:36,410 --> 00:00:37,280
It meant one.

9
00:00:39,680 --> 00:00:41,810
And here he will define an understatement.

10
00:00:41,870 --> 00:00:50,120
It meant to basically this part, if this condition is true right, then the statement one will get

11
00:00:50,120 --> 00:00:50,790
executed.

12
00:00:50,810 --> 00:00:52,460
But if this condition is false?

13
00:00:53,580 --> 00:00:55,590
The statement, would you.

14
00:00:57,390 --> 00:01:05,580
Let me try to explain you with the help of a good demo, and maybe I can that would offer you more clarity.

15
00:01:06,860 --> 00:01:14,900
So what I will do, I will open up the text read and I can look in ex-model, as do it, said this is

16
00:01:14,900 --> 00:01:19,100
the condition the mod operator gives us the remainder.

17
00:01:19,320 --> 00:01:19,520
OK.

18
00:01:20,120 --> 00:01:25,700
And I can say OK, if it is equal to zero, maybe I want to see out even.

19
00:01:26,980 --> 00:01:30,220
And otherwise, I want to see out or something like this.

20
00:01:31,310 --> 00:01:32,270
And what is it?

21
00:01:32,420 --> 00:01:39,440
So we need to define X and we will take and put the value of its like A and B that we are taking input

22
00:01:40,040 --> 00:01:43,030
and then we are checking if this condition is true or not.

23
00:01:43,040 --> 00:01:47,030
So this this whole thing is one condition, OK?

24
00:01:49,100 --> 00:01:55,190
And then we have statement one, which is sealed even and then we have statements he ordered.

25
00:01:55,790 --> 00:02:02,750
Now if this condition is true, that means the number is actually even we will print even on otherwise

26
00:02:02,750 --> 00:02:04,620
we will print it.

27
00:02:04,850 --> 00:02:09,200
So in case of this part will get executed in case of false.

28
00:02:09,320 --> 00:02:10,790
This part will get executed.

29
00:02:11,450 --> 00:02:13,370
You may ask, why do we need this?

30
00:02:14,000 --> 00:02:24,860
You may not always need this, but this can be used as a shorthand for, if else, if you have a word

31
00:02:24,860 --> 00:02:28,220
that is only a single language inside the block.

32
00:02:28,220 --> 00:02:30,350
If you want to do work, that is.

33
00:02:31,960 --> 00:02:39,150
When comprising of only one line of code, something doing, then maybe in that case you can use an

34
00:02:39,550 --> 00:02:46,420
alternative operator in case of a fence as a replacement, or it will reduce the number of lines of

35
00:02:46,420 --> 00:02:47,770
code that you're using.

36
00:02:48,460 --> 00:02:55,310
But talking about algorithmic optimization, it is equally good or it is equally fast as if fence OK,

37
00:02:56,230 --> 00:03:01,900
so you can either use it field or you can use this one if you have a very simple defense case, OK,

38
00:03:01,920 --> 00:03:03,640
if it's totally your choice.

39
00:03:03,640 --> 00:03:10,630
But if else can also handle more number of statements inside if log on inside the health block as well.

40
00:03:11,110 --> 00:03:14,000
But here we are, just what we are talking about.

41
00:03:14,020 --> 00:03:15,430
One statement OK?

42
00:03:15,730 --> 00:03:19,540
One statement for true and one statement if their condition is false.

43
00:03:20,080 --> 00:03:23,020
So maybe let's build this code and let us try to run it.

44
00:03:24,220 --> 00:03:28,000
Something that he operated on Dodge last.

45
00:03:29,620 --> 00:03:33,790
And maybe I give the number eight going to get this, is you a number?

46
00:03:34,270 --> 00:03:35,890
Maybe I give the number 11.

47
00:03:35,980 --> 00:03:37,460
So I get this is a hard number.

48
00:03:37,480 --> 00:03:37,740
OK.

49
00:03:38,290 --> 00:03:42,700
This is how this operator is working on.

50
00:03:42,700 --> 00:03:44,650
Maybe I can give you another example.

51
00:03:46,460 --> 00:03:47,570
Maybe I can say.

52
00:03:49,870 --> 00:03:50,440
It's a.

53
00:03:52,350 --> 00:03:56,130
I want to assign a value to maybe a string.

54
00:03:58,040 --> 00:03:59,540
And I can just drink whether.

55
00:04:01,030 --> 00:04:02,770
And maybe I will depend.

56
00:04:02,800 --> 00:04:10,480
It will depend upon the value of X. Maybe if the temperature is greater than 20 degrees Celsius, I

57
00:04:10,480 --> 00:04:12,790
can say it's so hot.

58
00:04:13,770 --> 00:04:15,900
Otherwise, it's good.

59
00:04:16,170 --> 00:04:16,620
Let's see.

60
00:04:17,410 --> 00:04:22,590
OK, maybe I can see out what is the victory?

61
00:04:24,450 --> 00:04:31,530
I will give put a number on based upon the value of the number, if it is greater than 20, the weather

62
00:04:31,530 --> 00:04:32,280
would get away.

63
00:04:32,820 --> 00:04:34,440
Otherwise, it would get away.

64
00:04:34,770 --> 00:04:35,520
That is cool.

65
00:04:36,510 --> 00:04:44,730
OK, now let's underscore and we I give the number 25 get too good when the individuals are no and the

66
00:04:44,730 --> 00:04:46,260
weather is hot, which is OK.

67
00:04:46,980 --> 00:04:51,900
Maybe the number 10, they're going to get an even number and the weather is good, right?

68
00:04:52,570 --> 00:04:56,340
They're actually both of these are examples of binary operator.

69
00:04:56,840 --> 00:04:58,530
So you get what I'm trying to tell you through.

70
00:04:58,530 --> 00:05:02,310
The second example is you can use this as a part of the assignment.

71
00:05:02,490 --> 00:05:08,160
OK, maybe you want to assign some value to the weather based upon the temperature.

72
00:05:08,910 --> 00:05:11,160
We are saying, OK, this is our condition.

73
00:05:11,160 --> 00:05:17,910
If the condition is true, then this value would get assigned to the weather because the weather will

74
00:05:17,910 --> 00:05:18,810
take the value hot.

75
00:05:19,710 --> 00:05:21,900
If this is false, then weather will take the value.

76
00:05:21,930 --> 00:05:24,750
Cool that it is a drizzle.

77
00:05:25,350 --> 00:05:27,840
The ternary operator is working in this case.

78
00:05:28,540 --> 00:05:31,410
I hope you got the concept, and that's all for this video.
