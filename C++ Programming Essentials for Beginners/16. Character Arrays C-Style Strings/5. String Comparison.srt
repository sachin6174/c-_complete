1
00:00:00,740 --> 00:00:06,950
Everyone, so in the last few days will be debate by strategic good on where we wrote our own comparison

2
00:00:06,950 --> 00:00:11,030
function to compare to strength in this lecture.

3
00:00:11,090 --> 00:00:20,240
What we are going to do, we are going to have, let's say, two words I'm willing to use in comparison

4
00:00:20,240 --> 00:00:27,050
function to compare the two words OK, maybe the word one, it's already on word to its alternative.

5
00:00:31,050 --> 00:00:35,740
I'm going to take input two words, let's say a word, one and word to.

6
00:00:36,780 --> 00:00:39,090
And now we are going to compare if they're equally ignored.

7
00:00:39,120 --> 00:00:47,460
So what we're into, we are going to use a function from sea is drink that is the library that works

8
00:00:47,460 --> 00:00:48,810
on good activities.

9
00:00:48,810 --> 00:00:52,560
It provides us function to work on sea style strings.

10
00:00:52,560 --> 00:00:55,680
OK, so this connected, it is a sea style string.

11
00:00:56,610 --> 00:01:02,490
And the library is C Street will get to the function that we have already seen.

12
00:01:02,700 --> 00:01:06,840
One of the function is a story that tells us the land of the word.

13
00:01:07,860 --> 00:01:13,740
Similarly, we have a function goal is to assume that compares whether the two words are equal or not.

14
00:01:14,340 --> 00:01:15,900
What I will tell you is Donald.

15
00:01:18,610 --> 00:01:26,260
At this library actually compares to strings being one in string two, and you can see it is accepting

16
00:01:27,070 --> 00:01:34,090
the character is kept on, it is going to compare the first letter of each string if they're equal.

17
00:01:34,270 --> 00:01:42,310
It continues with the following pairs until the characters before or until no time in another character

18
00:01:42,310 --> 00:01:42,730
is reached.

19
00:01:42,940 --> 00:01:47,500
So unless you hit another character, it is going to compare it with strings on.

20
00:01:47,500 --> 00:01:55,740
It returns either less than zero or equal to zero if what the strings are equal and greater than zero

21
00:01:55,750 --> 00:02:02,790
if the first corrected, that does not match as a greater value in string one, then in string Rachel

22
00:02:03,040 --> 00:02:05,610
again, just try to show you a demo date.

23
00:02:06,070 --> 00:02:09,010
So we are going to build this code and maybe we are going to output this.

24
00:02:09,370 --> 00:02:16,150
OK, now if I clear this and maybe I'm going to run the code, then comparison.

25
00:02:16,150 --> 00:02:18,640
OK, dodge logicians string comparison.

26
00:02:19,420 --> 00:02:21,560
Let's say the first word is.

27
00:02:23,140 --> 00:02:29,860
But and the second word is bagmen, because we are we are getting a negative number.

28
00:02:30,100 --> 00:02:35,980
That means that the first string it is smaller than the second string.

29
00:02:35,980 --> 00:02:41,890
OK, that means smaller means if you talk about the dictionary order, the bat would come first.

30
00:02:43,350 --> 00:02:49,830
Then the second like man, Batman would come next, OK, so that is what it is trying to say, and maybe

31
00:02:49,830 --> 00:02:53,400
I can show you if I give Batman on breakfast.

32
00:02:54,160 --> 00:02:56,460
So it does give me a positive in digital.

33
00:02:56,460 --> 00:03:03,090
Okay, that means this number is bigger or this string is greater than the string, but.

34
00:03:04,800 --> 00:03:10,260
And if they have two equal strength, it does return a value that is equal to zero.

35
00:03:10,870 --> 00:03:13,080
I hope you're getting to understand.

36
00:03:15,330 --> 00:03:21,780
Maybe you can put it felt right if in comparison and if this is equal to zero, you can say, OK.

37
00:03:25,500 --> 00:03:27,450
The out they are equal.

38
00:03:28,140 --> 00:03:29,280
Words are equal.

39
00:03:31,540 --> 00:03:39,640
Otherwise, maybe you can see as if the same does on what we can do is we can instead of calling them

40
00:03:39,640 --> 00:03:42,760
functional again and again, we can store the result.

41
00:03:42,760 --> 00:03:47,920
Here we can say, let's store the result of comparing those drinks.

42
00:03:48,550 --> 00:03:51,100
And then we check what the result is.

43
00:03:51,280 --> 00:04:00,490
And if a result is greater than zero, maybe you can say the out word one is great.

44
00:04:00,610 --> 00:04:07,390
That means it appears after words to in dictionary.

45
00:04:07,690 --> 00:04:07,990
OK.

46
00:04:09,290 --> 00:04:11,180
On else, you can say.

47
00:04:12,540 --> 00:04:18,330
The dictionary, I'm talking about an English dictionary in which the words odd according to a lexicography

48
00:04:18,390 --> 00:04:20,430
order, OK, that is your dictionary order.

49
00:04:21,890 --> 00:04:30,950
As it would be the other case, let me show you again, maybe Apple on Batman to Batman appears after

50
00:04:30,950 --> 00:04:32,460
Apple in dictionary.

51
00:04:32,480 --> 00:04:33,200
That's correct.

52
00:04:33,950 --> 00:04:36,110
And if I have a.

53
00:04:37,330 --> 00:04:38,890
And Apple, right?

54
00:04:39,520 --> 00:04:45,400
So Apple appears after rape, and maybe if I give Apple Andy.

55
00:04:46,960 --> 00:04:49,120
So again, we are getting the same thing, right?

56
00:04:50,830 --> 00:04:53,180
So basically, let me let me give you something else.

57
00:04:53,860 --> 00:04:54,810
I'd say.

58
00:04:57,210 --> 00:04:57,900
Watch, too.

59
00:04:57,970 --> 00:04:59,010
OK, that is fine.

60
00:04:59,490 --> 00:05:00,330
That is fine, right?

61
00:05:01,030 --> 00:05:09,720
Every tab on tablet cable rate table appears after DOB in dictionary, which is correct on Debian Dub

62
00:05:09,960 --> 00:05:10,290
Words.

63
00:05:11,280 --> 00:05:18,760
That is how we can use the string comparison function to compare to strings as a practice exercise.

64
00:05:18,780 --> 00:05:19,440
What are you going to do?

65
00:05:19,460 --> 00:05:29,370
You can write their own string compare method that accepts dual character arrays, and it does the comparison

66
00:05:29,550 --> 00:05:30,360
letter well-rated.

67
00:05:30,840 --> 00:05:31,800
You traverse.

68
00:05:32,520 --> 00:05:38,190
You write a good doctor vs. both of them, and then you'd have done something based on whether they're

69
00:05:38,190 --> 00:05:39,490
equal, greater or lesser.

70
00:05:39,520 --> 00:05:41,070
So this is a homework for you.

71
00:05:41,790 --> 00:05:43,800
Try doing it on your own right.
