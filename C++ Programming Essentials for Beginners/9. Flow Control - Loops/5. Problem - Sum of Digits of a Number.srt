1
00:00:01,530 --> 00:00:02,260
Hello, everyone.

2
00:00:02,280 --> 00:00:08,340
So in this lecture, we're going to solve a problem given a number and we need to find the sum of its

3
00:00:08,340 --> 00:00:09,030
digits, OK?

4
00:00:09,570 --> 00:00:11,490
So let me show you an example.

5
00:00:11,580 --> 00:00:20,430
Let's say the number is one two five three, and we want to find out the sum of digits, which is one

6
00:00:20,430 --> 00:00:25,190
plus two plus five plus three eight, which is 11, right?

7
00:00:25,590 --> 00:00:26,940
This is what we want to print.

8
00:00:28,050 --> 00:00:30,200
Now how you're going to approach this problem?

9
00:00:30,210 --> 00:00:31,080
Let's have a look.

10
00:00:31,800 --> 00:00:37,290
In order to find the sum of digits, you need to extract each digit one by one.

11
00:00:37,480 --> 00:00:40,960
The one common way of finding the last digit.

12
00:00:40,980 --> 00:00:44,100
OK, so maybe I will find out what is the last digit?

13
00:00:46,310 --> 00:00:49,160
This last digit is currently now three.

14
00:00:49,520 --> 00:00:54,080
And how do I do it, Isaac, if I take the more of the No.

15
00:00:54,410 --> 00:01:00,650
With 10 rate, if I divide this number with 10 and the remainder, what is the remainder that is left?

16
00:01:00,740 --> 00:01:02,090
The remainder is actually three.

17
00:01:02,540 --> 00:01:03,620
These are the last digit.

18
00:01:03,770 --> 00:01:06,560
Nothing would end modern, OK?

19
00:01:07,100 --> 00:01:11,060
This actually gives me the docket from the number one to five three.

20
00:01:11,660 --> 00:01:16,700
I got the remainder three and I will add this three to a bucket called sum.

21
00:01:16,970 --> 00:01:18,170
The sum is initially zero.

22
00:01:18,200 --> 00:01:21,070
So I treat it in the next app.

23
00:01:21,080 --> 00:01:21,890
What I need to do.

24
00:01:22,400 --> 00:01:22,700
OK.

25
00:01:23,150 --> 00:01:27,380
I actually need to extract this number five in order to extract that.

26
00:01:27,380 --> 00:01:27,830
Five.

27
00:01:28,130 --> 00:01:34,970
I need to remove this tree so that I can use the same thing again and again so I can again do if my

28
00:01:34,970 --> 00:01:36,320
number is 125.

29
00:01:37,010 --> 00:01:41,960
And if I do a mod with 10, I will get the number five.

30
00:01:42,620 --> 00:01:45,650
I can easily add five in the next iteration.

31
00:01:45,650 --> 00:01:47,450
I even want to remove this five.

32
00:01:47,870 --> 00:01:50,050
And I want to make the number as self.

33
00:01:51,090 --> 00:01:56,190
So that I can get to by doing that and more generally, so I will add to do my answer.

34
00:01:57,120 --> 00:01:59,610
And the next step, I even want to remove, too.

35
00:02:00,270 --> 00:02:06,930
And I want to make the number as one that I get one as the remainder in the next step, I will reduce

36
00:02:06,930 --> 00:02:13,740
it further by saying, OK, let us reduce it to zero and we will stop working.

37
00:02:13,740 --> 00:02:15,590
So this is the point, then we will stop.

38
00:02:15,690 --> 00:02:16,890
This is your actual number.

39
00:02:16,910 --> 00:02:24,030
And now you can see how this number is getting changed from one to five, three to 125 in every step.

40
00:02:24,180 --> 00:02:26,640
We are applying an update that.

41
00:02:27,780 --> 00:02:29,060
And is equal to anybody.

42
00:02:29,940 --> 00:02:35,450
This is what we are doing right now, this can be sold either using a for loop or using a value.

43
00:02:35,700 --> 00:02:37,830
Let me show you how you can do it using a for loop.

44
00:02:38,130 --> 00:02:38,400
OK.

45
00:02:39,000 --> 00:02:40,650
Let me first show you how you can do it.

46
00:02:40,650 --> 00:02:43,120
Using a value to end it is amazing.

47
00:02:43,980 --> 00:02:48,930
So you have to take and put a number in so that we have done and we have to do some work.

48
00:02:48,930 --> 00:02:54,330
While this number is, let's say, greater than zero are not equal to zero water fine.

49
00:02:56,180 --> 00:03:04,250
What I will do, I'll find out the last digit, which is nothing but end modern and I will add this

50
00:03:04,580 --> 00:03:05,270
to my son.

51
00:03:05,660 --> 00:03:05,990
OK.

52
00:03:07,230 --> 00:03:14,400
And I will say, okay, let us put the update condition, how we are changing, and in every step,

53
00:03:14,400 --> 00:03:21,840
you can see that from one two five three two one to five, it is an equal two and divided by right.

54
00:03:22,780 --> 00:03:29,470
And finally, when you're out of the loop, you can print the sun, and this will give us the sum of

55
00:03:29,710 --> 00:03:31,630
digits of the number eight.

56
00:03:33,510 --> 00:03:33,870
So.

57
00:03:35,150 --> 00:03:41,580
Let me try to underscore maybe one two five three eight oh.

58
00:03:48,600 --> 00:03:55,250
So some to some plus large strategic trade, we just somehow made this mistake.

59
00:03:57,200 --> 00:03:59,150
One, two, five and three.

60
00:04:00,530 --> 00:04:05,160
We're going to we're getting this armadillo in Mozambique, if you want to do it using for look, you

61
00:04:05,160 --> 00:04:06,480
can do it, so you will see OK.

62
00:04:07,180 --> 00:04:11,190
Bored and not equal to zero and is already initialized.

63
00:04:11,760 --> 00:04:16,860
And either you can put the update condition hit or you can put it hit and equal to and write and write.

64
00:04:17,370 --> 00:04:23,310
So every time you find out the last digit and you add it to the same rate, but even you can make this

65
00:04:23,460 --> 00:04:26,910
more shorter, you can do some equal to some less.

66
00:04:26,910 --> 00:04:28,800
And Martin, which is the last.

67
00:04:29,200 --> 00:04:32,100
So you can just do it in one line of code as well.

68
00:04:32,880 --> 00:04:36,990
And let's build this code and let's try to run this.

69
00:04:38,270 --> 00:04:40,430
So one, two, five three.

70
00:04:40,940 --> 00:04:42,500
Again, you're getting an output element.

71
00:04:42,620 --> 00:04:42,950
OK.

72
00:04:43,400 --> 00:04:45,920
It's totally your choice how you want to proceed.

73
00:04:46,100 --> 00:04:52,280
But this is a thing that I wanted to teach if you want to find the last visit of any number you do and

74
00:04:52,280 --> 00:04:53,090
model Austin.

75
00:04:53,600 --> 00:04:55,730
And if you want to reduce that number.

76
00:04:56,180 --> 00:04:56,510
OK.

77
00:04:57,290 --> 00:05:02,840
Some people might think one two three five upon 10 is why not one twenty three point five.

78
00:05:03,290 --> 00:05:07,550
The thing is, in programming we have, especially in C++ and Java.

79
00:05:08,360 --> 00:05:11,860
When you divide two integers, you always get in digit.

80
00:05:12,290 --> 00:05:13,810
You do not get the fraction of.

81
00:05:14,120 --> 00:05:21,050
That is why this division by then really works well here, and I hope you have understood the logic.

82
00:05:21,050 --> 00:05:22,070
And that's all OK.
