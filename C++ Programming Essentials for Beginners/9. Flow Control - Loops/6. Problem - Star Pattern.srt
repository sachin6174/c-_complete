1
00:00:01,200 --> 00:00:01,860
Hello, everyone.

2
00:00:01,980 --> 00:00:04,500
In this lecture, we're going to solve this problem.

3
00:00:04,680 --> 00:00:10,050
So you have already seen that if we are given a number and this is the kind of burden that we want to

4
00:00:10,050 --> 00:00:10,550
print, right?

5
00:00:11,280 --> 00:00:18,740
So we have already discussed the breakup that the for problems like these we need to go to.

6
00:00:19,350 --> 00:00:20,970
And we need to print something, right?

7
00:00:21,480 --> 00:00:22,680
I'll just give you an example.

8
00:00:22,680 --> 00:00:24,870
Again, hit the suppose.

9
00:00:24,870 --> 00:00:27,850
In the first row, we noted that we have one start.

10
00:00:27,870 --> 00:00:31,200
Then we have three stars and then we have five stars, OK?

11
00:00:31,590 --> 00:00:37,410
So clearly the number of stars are increasing as we are going down to the Roland Burris one, the Roland

12
00:00:37,410 --> 00:00:41,070
Burris two and Roland Burris three, right two in each row.

13
00:00:41,070 --> 00:00:44,050
I have to go into a minus one stars, right?

14
00:00:44,850 --> 00:00:50,820
And we also discussed that there are and minus espaces you need to do what I need to do.

15
00:00:51,240 --> 00:00:55,620
I need to implement this using loops to let us see how we can do it.

16
00:00:56,970 --> 00:01:00,450
So, first of all, will include the header file.

17
00:01:01,080 --> 00:01:04,020
We will build our main and.

18
00:01:05,360 --> 00:01:10,670
We can now declare a number and we can read what is this number?

19
00:01:11,270 --> 00:01:16,100
And now once we know what is the value of, then we need to print and number of rules.

20
00:01:16,640 --> 00:01:19,340
I can look at the rule number starts from one.

21
00:01:19,850 --> 00:01:28,490
The rule number goal is still an A-plus plus, and in each row I have to print spaces and after spacing,

22
00:01:28,490 --> 00:01:29,550
have to print stars.

23
00:01:30,440 --> 00:01:31,640
So how do I print spaces?

24
00:01:31,990 --> 00:01:37,940
So again, in order to print spaces, I will need a loop so I will default in some stars that is equal

25
00:01:37,940 --> 00:01:43,040
to zero or stars equal to one stars less than equal to and minus I.

26
00:01:43,320 --> 00:01:48,350
Look, this is a formula that we have already derived on recent Star C++.

27
00:01:49,270 --> 00:01:52,400
And now what we can, we can say, see out.

28
00:01:53,880 --> 00:01:54,690
A single stock.

29
00:01:55,440 --> 00:01:55,720
OK.

30
00:01:56,430 --> 00:02:02,460
And by printing this single story that it will print a single space, right?

31
00:02:04,760 --> 00:02:07,790
We are actually printing spaces for straight spaces.

32
00:02:08,360 --> 00:02:13,610
So I should name the variable as space and I should printer space, right?

33
00:02:14,240 --> 00:02:22,470
And four times I can to 14 stars equal to one stars less than equal to the window I minus one stars

34
00:02:22,470 --> 00:02:28,430
C++ and we will now do the actual printing of the star, which is like this.

35
00:02:29,000 --> 00:02:35,390
And after every row or give, you have to go to new lengths will print a new line corrected using INDL.

36
00:02:35,870 --> 00:02:36,560
And that's it.

37
00:02:36,680 --> 00:02:38,210
That will do the work for us.

38
00:02:38,990 --> 00:02:40,100
We have built the code.

39
00:02:40,400 --> 00:02:44,150
OK, so this loop is four rows on inside every row.

40
00:02:44,150 --> 00:02:48,920
We have to print spaces and we have to print stars as well, right?

41
00:02:49,970 --> 00:02:53,960
Now let us try to run this code and see what we get as a output rate.

42
00:02:55,310 --> 00:02:56,600
So let me show you.

43
00:02:59,890 --> 00:03:02,410
So maybe if necessary, I get this pardon.

44
00:03:02,620 --> 00:03:05,380
If in his faith, I could get this pardon.

45
00:03:05,830 --> 00:03:07,930
So it absolutely looks correct.

46
00:03:08,200 --> 00:03:11,950
And this is what we expected this program.

47
00:03:12,190 --> 00:03:12,470
OK.

48
00:03:12,790 --> 00:03:14,410
So I hope you understood the logic.

49
00:03:14,560 --> 00:03:21,420
What we have that we have converted the pseudocode that we have discussed in the pseudocode module into

50
00:03:21,550 --> 00:03:24,070
a real C++ code that actually works.

51
00:03:24,460 --> 00:03:25,590
That's all for this video.

52
00:03:25,600 --> 00:03:26,080
Thank you.
