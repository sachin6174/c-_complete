1
00:00:00,870 --> 00:00:01,580
Hello, everyone.

2
00:00:01,710 --> 00:00:06,990
So in this lecture, we'll talk about strings on, we'll talk about how we can initialize a string or

3
00:00:06,990 --> 00:00:07,200
guess what?

4
00:00:07,200 --> 00:00:13,790
There are so many ways and I might be covering a few of them so you can create an empty string as one

5
00:00:13,800 --> 00:00:15,930
and you don't give any value that is OK.

6
00:00:16,440 --> 00:00:22,110
You can also create a string on in curly brackets, which is also known as initialize it list.

7
00:00:22,710 --> 00:00:23,120
You are.

8
00:00:23,230 --> 00:00:25,440
You have given a string literal to what it is doing.

9
00:00:25,440 --> 00:00:32,640
It is copying the letters from a read only memory where this string little is created in the inside

10
00:00:32,640 --> 00:00:35,010
of string object, which contains a character.

11
00:00:35,080 --> 00:00:39,210
OK, so the halo is being copied inside a string object.

12
00:00:39,750 --> 00:00:46,390
And you can also say that, OK, I want to create a string using another string object, which is OK,

13
00:00:46,410 --> 00:00:48,790
so you are initializing A3 using is to.

14
00:00:49,700 --> 00:00:50,280
Are you going?

15
00:00:50,380 --> 00:00:57,150
OK, I want to create a string is forward in which I just want to read the first three letters.

16
00:00:57,240 --> 00:01:00,990
So it is going to create a string called AGL when I return here.

17
00:01:01,800 --> 00:01:08,580
Or you can do OK, I want to create a string from S2 and I only want to read from zero till the second

18
00:01:08,580 --> 00:01:10,740
index, like before the second index.

19
00:01:11,310 --> 00:01:14,090
It is going to store zero and one that does it and.

20
00:01:14,820 --> 00:01:15,170
Get.

21
00:01:16,090 --> 00:01:21,730
And there is also another initialization, which is the constructor based initialization.

22
00:01:21,760 --> 00:01:24,490
So let me also show you that.

23
00:01:25,600 --> 00:01:33,160
So in this case, we have as food on in round brackets we have written somewhere.

24
00:01:33,850 --> 00:01:34,870
That is what we can do.

25
00:01:35,620 --> 00:01:43,600
Or we can still get some long, long string and we can take only the first 12 letters of this string.

26
00:01:44,350 --> 00:01:49,960
There is another initialization in which we are saying that we have created a string and we want to

27
00:01:49,960 --> 00:01:52,300
repeat this x ten times.

28
00:01:52,900 --> 00:01:54,880
That is what I was trying to show you here.

29
00:01:55,060 --> 00:01:57,370
So repeat this a few times.

30
00:01:57,440 --> 00:02:00,490
So it is going to create a string like this.

31
00:02:02,670 --> 00:02:07,110
And so on, Rachel, maybe you can try to play with some of these initial positions.

32
00:02:07,440 --> 00:02:09,150
And let's see how we can do it, OK?

33
00:02:09,270 --> 00:02:13,410
So bring in a demo or TPP.

34
00:02:14,070 --> 00:02:16,920
So first of all, include your string.

35
00:02:20,550 --> 00:02:21,000
And.

36
00:02:27,190 --> 00:02:28,150
We have.

37
00:02:30,880 --> 00:02:39,160
A string s and maybe I can say hello, this is kind of initialization list.

38
00:02:39,730 --> 00:02:41,350
And if the string is to.

39
00:02:42,920 --> 00:02:45,110
And I said this is equal to.

40
00:02:46,630 --> 00:02:48,910
Helloworld, that is also OK.

41
00:02:49,920 --> 00:02:51,530
Again, the string is three.

42
00:02:52,160 --> 00:02:59,660
And I'm saying you can make this from S2 that will also work, and I can do string as foot in curly

43
00:02:59,660 --> 00:03:00,050
brackets.

44
00:03:00,050 --> 00:03:02,850
I can say as to that will also work.

45
00:03:02,900 --> 00:03:06,110
So if I do see S1 S2.

46
00:03:07,350 --> 00:03:11,420
As trainers for all of them are going to work fine, right?

47
00:03:16,820 --> 00:03:17,660
Let's build a quote.

48
00:03:17,690 --> 00:03:18,850
It's getting built.

49
00:03:19,730 --> 00:03:22,970
And let me show you dog's leash.

50
00:03:24,120 --> 00:03:24,780
Bring them all.

51
00:03:28,300 --> 00:03:34,240
String initialization demo, the halo, followed by hello to all of the initial visions, they are correct

52
00:03:34,840 --> 00:03:44,320
and maybe some more ring is five and I can say, OK, I want to repeat a number eight times and the

53
00:03:44,320 --> 00:03:45,240
number is.

54
00:03:47,300 --> 00:03:50,210
Or the stringers, let's say hi.

55
00:03:53,720 --> 00:03:53,980
OK.

56
00:03:54,770 --> 00:03:59,390
This will not work, so it is expecting a corrected here, though maybe it's.

57
00:04:10,300 --> 00:04:17,920
Now, if I show you it's it's repeated eight times as that is what was shown here as well.

58
00:04:18,330 --> 00:04:20,470
So you can give a letter and you can repeat it.

59
00:04:21,070 --> 00:04:26,170
You can also say, OK, I want something from a certain index up to a certain length, right?

60
00:04:28,270 --> 00:04:32,470
So which is an example here, OK?

61
00:04:32,620 --> 00:04:37,900
And this is actually instead of feeding the character, you can also give the integer value.

62
00:04:37,900 --> 00:04:44,830
Maybe you can say I want string as six and I want to repeat 10 times.

63
00:04:45,460 --> 00:04:47,560
The letter is it so is having a value?

64
00:04:47,560 --> 00:04:48,310
Sixty five?

65
00:04:49,300 --> 00:04:56,200
Let me show you show you right now, we have not printed it so out as six and.

66
00:04:57,590 --> 00:05:01,870
It it will still work, it will get so many years.

67
00:05:03,960 --> 00:05:07,840
All right, so there are so many ways of initializing strings.

68
00:05:07,890 --> 00:05:15,330
So one thing I wanted to inform you was that you can also create a string S7 and later on you can say

69
00:05:16,170 --> 00:05:19,410
this was initially high on later on.

70
00:05:19,410 --> 00:05:26,670
You know, this is actually by, OK, this operation of assignment, this is supported in strings.

71
00:05:28,100 --> 00:05:35,240
And it was not reported and corrected, it is what is happening is that this equal to operator is going

72
00:05:35,240 --> 00:05:41,630
to copy all the letters of this string, literally from a read only location to inside a reader, this

73
00:05:41,630 --> 00:05:47,070
president and say the strange object because of this functionality is part of the string glass.

74
00:05:47,090 --> 00:05:49,130
It's not like a magic is happening.

75
00:05:49,130 --> 00:05:55,850
It's being written for strings inside the string glass, which we have included from the header file,

76
00:05:55,850 --> 00:05:56,090
right?

77
00:05:57,430 --> 00:06:03,760
So now let me show you that this is actually no, but that means you can update the strings.

78
00:06:04,240 --> 00:06:10,980
You can also do concatenation you can see as seven equals seven plus.

79
00:06:12,590 --> 00:06:13,780
Goodbye, MacGyver, right?

80
00:06:13,850 --> 00:06:15,290
Maybe something something like that.

81
00:06:17,820 --> 00:06:18,300
We are.

82
00:06:21,510 --> 00:06:24,150
Going back home, maybe something like that.

83
00:06:26,980 --> 00:06:30,940
Or maybe you can do multiple editions as well like this.

84
00:06:32,090 --> 00:06:38,480
Now we are concatenating will give you are doing the concatenation, and it's very natural, we are

85
00:06:38,480 --> 00:06:40,970
doing it using the plus operator, right?

86
00:06:44,310 --> 00:06:45,680
Seven, we have updated.

87
00:06:47,600 --> 00:06:48,570
Let's build a God.

88
00:06:48,630 --> 00:06:56,150
And let me show you the output, so maybe we are going back home so you can see this is possible because

89
00:06:56,150 --> 00:07:02,900
the strings, they have a dynamic nature, they're able to grow and shrink in size because internally

90
00:07:03,270 --> 00:07:05,120
that is managed by the string glass.

91
00:07:05,570 --> 00:07:06,710
How does getting managed?

92
00:07:06,800 --> 00:07:08,790
That is not our concern at this moment.

93
00:07:08,810 --> 00:07:13,430
We are just getting comfortable with those and takes off things, OK?

94
00:07:14,390 --> 00:07:20,720
So I hope you got to know how to create things, how to work with strings on.

95
00:07:20,720 --> 00:07:26,030
In the next lecture, we'll see some more functions of input and output, even the next video.
