1
00:00:01,250 --> 00:00:04,880
Everyone in this lecture we're going to talk about binary numbers is done.

2
00:00:05,360 --> 00:00:11,180
The reason why we're going to understand this by new numbers is because it will help us to develop a

3
00:00:11,180 --> 00:00:16,040
better understanding of how machines work at the very lowest level, OK?

4
00:00:16,640 --> 00:00:18,710
And we have seen differently types as well.

5
00:00:18,710 --> 00:00:24,590
So different data types are also stored as binary number inside the memory of the computer.

6
00:00:25,100 --> 00:00:28,500
So on any source code that we have written, right?

7
00:00:28,520 --> 00:00:34,760
So we would generally write the code in a programming language that can be C++, Java or Python.

8
00:00:35,420 --> 00:00:41,870
Then that code goes through a application that we call as compiler or an interpreter.

9
00:00:42,470 --> 00:00:47,210
And this is going to convert this into machine code in case of C++.

10
00:00:47,360 --> 00:00:53,240
OK, the compiler generates a machine called this machine code is in the form of zeros and ones, right?

11
00:00:54,330 --> 00:01:02,430
So this is what a binary number looks like and all the instructions that we write, they are converted

12
00:01:02,430 --> 00:01:10,650
into binary instructions that the processor can execute and all the data that we have that is also converted

13
00:01:10,650 --> 00:01:13,210
into binary data for storage.

14
00:01:13,950 --> 00:01:19,980
So learning about that, this number will help us to develop a better understanding of how machines

15
00:01:19,980 --> 00:01:20,280
work.

16
00:01:20,880 --> 00:01:28,630
And yeah, so generally what we have until now, we have frequently worked with the decimal number system.

17
00:01:28,680 --> 00:01:29,730
We, as humans write.

18
00:01:30,880 --> 00:01:31,290
And.

19
00:01:33,280 --> 00:01:41,350
So what what we have seen in decimal number system is that we have 10 unique, did it OK if I talk about

20
00:01:41,760 --> 00:01:49,810
the decimal numbers, we have 10 unique digits from one to one zero two nine eight zero one two three

21
00:01:49,810 --> 00:01:52,690
four five six seven, eight and nine.

22
00:01:52,690 --> 00:01:58,780
So we have 10 unique digits and we say, OK, the base is also 10, right?

23
00:01:59,530 --> 00:02:01,330
And what is the meaning of this dom base?

24
00:02:01,900 --> 00:02:03,690
Let us take an example of a number.

25
00:02:03,700 --> 00:02:05,800
Let's say our number is 234.

26
00:02:07,030 --> 00:02:10,120
The meaning of base is that this number is multiplied.

27
00:02:11,050 --> 00:02:14,680
It is generated by combining the powers of.

28
00:02:17,870 --> 00:02:23,560
So by combining the powers of 10, Richard and Bob Zito and Bauer, one and then Bob.

29
00:02:24,730 --> 00:02:25,660
So what happens?

30
00:02:27,380 --> 00:02:35,170
Each each place will be multiplied with the power of 10 to get get the contribution of that place,

31
00:02:35,180 --> 00:02:35,410
OK?

32
00:02:35,850 --> 00:02:42,560
For example, I will multiply two with 10 squared and I will add three multiplied with 10 power, one

33
00:02:42,560 --> 00:02:45,210
plus four multiplied with end poverty.

34
00:02:45,410 --> 00:02:49,790
So this becomes equal to 200 plus 30 plus four.

35
00:02:50,360 --> 00:02:53,700
And this is how the number 234 has been generated, OK?

36
00:02:54,620 --> 00:02:59,990
With each place, we have a power that is attached to that particular place.

37
00:03:00,680 --> 00:03:02,750
And this is what we generally work.

38
00:03:02,750 --> 00:03:08,450
As with this number system we'll get right now, we are going to talk about binding numbers system.

39
00:03:08,450 --> 00:03:12,290
So let us try to interpret a number in the binding base.

40
00:03:12,890 --> 00:03:17,540
Let's say we have binary means two zeros and ones.

41
00:03:17,990 --> 00:03:21,950
And now why only do two digits OK?

42
00:03:22,310 --> 00:03:29,090
The reason is the computer hardware, as I discussed it, made up of small, small electrical cells.

43
00:03:29,450 --> 00:03:33,800
OK, and they can store some judges if a cell is storing some charge.

44
00:03:34,250 --> 00:03:35,690
We said this represents one.

45
00:03:35,810 --> 00:03:42,350
And if it is not storing any geometries, it is representing the number to any data that we have to

46
00:03:42,350 --> 00:03:44,450
stored inside the heart of it.

47
00:03:45,230 --> 00:03:48,350
It must be converted into this form in the form of zeros and ones.

48
00:03:48,380 --> 00:03:54,470
OK, so let's take an example of a number that is written in binary and we will try to interpret it.

49
00:03:55,040 --> 00:03:57,680
Let's say one zero one zero one one later.

50
00:03:57,680 --> 00:03:58,490
This is the number.

51
00:03:59,990 --> 00:04:04,050
And we are storing this inside a certain cell in a set of cells.

52
00:04:04,070 --> 00:04:04,520
It's a.

53
00:04:05,590 --> 00:04:06,070
Now.

54
00:04:07,540 --> 00:04:11,740
What this number is going to represent, so here the basis.

55
00:04:11,990 --> 00:04:12,280
OK.

56
00:04:12,670 --> 00:04:19,930
That means if you want to find out what this exact number is, you have to multiply the corresponding

57
00:04:19,930 --> 00:04:20,350
bits.

58
00:04:21,550 --> 00:04:26,620
With powers of trade, so does this this places do but zero to power one.

59
00:04:27,220 --> 00:04:29,680
It was quicker to kill two powerful.

60
00:04:30,750 --> 00:04:32,160
And two par five, OK.

61
00:04:32,970 --> 00:04:38,700
Similarly, if there are more, but the higher powers of two will be used to what we will multiply to

62
00:04:38,700 --> 00:04:46,130
power five with one, we will multiply zero of it to power, four will multiply one with two skill,

63
00:04:47,040 --> 00:04:54,270
then two square into zero, then two power one and one, then the power zero into one.

64
00:04:54,480 --> 00:04:59,840
So we are multiplying these two, these two, these two, and adding that by adding them up.

65
00:04:59,850 --> 00:05:02,010
So this will actually give us up in digit.

66
00:05:02,850 --> 00:05:10,680
This is going to be nothing but 32 plus eight plus two plus one, right?

67
00:05:11,350 --> 00:05:13,800
So this number is actually the number 43.

68
00:05:14,460 --> 00:05:21,690
That means if you understood the number 43 inside the memory of the computer, this is how it would

69
00:05:21,690 --> 00:05:22,350
be stored, OK?

70
00:05:22,440 --> 00:05:24,300
This is how it would be stored.

71
00:05:24,660 --> 00:05:27,930
That is a brief introduction about the binding number system.

72
00:05:28,500 --> 00:05:31,380
And in the next lecture, we will dive into more details.

73
00:05:31,870 --> 00:05:33,330
And that's all for this video.
