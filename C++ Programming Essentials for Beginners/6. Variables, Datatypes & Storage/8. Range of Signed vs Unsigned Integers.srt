1
00:00:01,410 --> 00:00:07,590
So you have got some idea about how storage works in this lecture, we're going to talk about how you

2
00:00:07,590 --> 00:00:14,490
can calculate the range of data types, okay, how big number can be stored inside an integer or some

3
00:00:14,490 --> 00:00:15,060
other bucket.

4
00:00:15,690 --> 00:00:22,010
So we are going to talk about what is the largest possible range that the integer can hold together.

5
00:00:22,680 --> 00:00:26,070
If I give you a box that can only store two bits.

6
00:00:27,230 --> 00:00:31,220
Can you tell me what is the largest number that you can form?

7
00:00:31,530 --> 00:00:31,790
OK.

8
00:00:33,050 --> 00:00:36,660
The largest number, let us talk about if it is an unsigned one, right?

9
00:00:36,680 --> 00:00:41,590
That means there is no no concept of a binding.

10
00:00:42,080 --> 00:00:42,890
There is no negative.

11
00:00:42,890 --> 00:00:43,230
No.

12
00:00:43,700 --> 00:00:46,220
The older two, but they represent the magnitude.

13
00:00:46,970 --> 00:00:53,090
The clearly the largest number that you can form is all ones, which is three and the smallest number

14
00:00:53,090 --> 00:00:54,070
is all zeros.

15
00:00:55,840 --> 00:00:56,380
Which is it?

16
00:00:56,410 --> 00:01:02,380
So you can store the numbers in the range zero to 0.3 in a double box?

17
00:01:02,540 --> 00:01:06,750
OK, that is zero zero zero one one zero and one one.

18
00:01:06,790 --> 00:01:12,100
So these are the four numbers that are possible and that makes sense because a two-bit box you can have

19
00:01:12,790 --> 00:01:16,300
arrested about that is you can represent only four numbers, right?

20
00:01:17,300 --> 00:01:23,270
OK, if I give you a vote box, this is why this number is still zero for the largest number is No.

21
00:01:23,270 --> 00:01:24,380
15 eight.

22
00:01:24,890 --> 00:01:30,670
That means starting from zero, you can store up to do this to the devour for minus one, right?

23
00:01:31,580 --> 00:01:38,230
Similarly, if I give you eight bit box, the largest number would be zero and it would be to raise

24
00:01:38,350 --> 00:01:39,890
the bar about eight minus one.

25
00:01:41,560 --> 00:01:50,000
Two days to debate it is 256 to the largest number can be 255, right, so the road to 255, right?

26
00:01:50,020 --> 00:01:54,630
So this number is to activate the Rangers zero to two days to deliberate minus.

27
00:01:55,510 --> 00:01:59,230
What we have seen till now is that we have in the works.

28
00:01:59,770 --> 00:02:03,940
We have a long integer and is storing 32 bits.

29
00:02:04,720 --> 00:02:05,050
OK.

30
00:02:05,860 --> 00:02:13,060
The range of integer in case of unsigned and be it, it would be starting from zero to do this today,

31
00:02:13,070 --> 00:02:16,840
about 32 minus one eight.

32
00:02:17,830 --> 00:02:21,190
This is this value approximately two ten point nine.

33
00:02:21,250 --> 00:02:27,130
So that means if you have a number that is containing candidates, you will not be able to store it

34
00:02:27,130 --> 00:02:36,070
inside and be it, you will have to go with the long and long resolved that long and has 64 bit than

35
00:02:36,070 --> 00:02:36,670
what the case is.

36
00:02:36,670 --> 00:02:39,850
I'm talking about unsigned and unsigned.

37
00:02:39,850 --> 00:02:41,500
Long, long, right?

38
00:02:44,760 --> 00:02:52,180
In this case, the Ranger's going from two to do this trip over 64 minus one and which is approximately

39
00:02:52,180 --> 00:02:54,170
two into 10 bullet hitting right.

40
00:02:55,500 --> 00:03:03,810
This is what the ring is, that means if you have any digit in which you can have up to 18 digits that

41
00:03:03,810 --> 00:03:09,780
can be stored in long up to eight benign digits that can be stored in integer right.

42
00:03:11,540 --> 00:03:17,450
And you will not be able to store a number which has more than 18 digits in the regular data types.

43
00:03:17,480 --> 00:03:23,600
You will have to use something like a big integer or you will have to do something like, Hey, we are

44
00:03:23,600 --> 00:03:30,340
not going to talk about that yet, but in the long depths of vision for most of your use cases, OK?

45
00:03:31,340 --> 00:03:33,710
Now we have only talked about unsigned Intrade.

46
00:03:34,280 --> 00:03:37,610
But what happens when you also have a signed integer?

47
00:03:37,610 --> 00:03:37,850
OK?

48
00:03:38,480 --> 00:03:40,790
What happens if you have a sign in digit?

49
00:03:41,410 --> 00:03:43,550
Let us look at that as well, right?

50
00:03:44,750 --> 00:03:46,400
So let us.

51
00:03:48,090 --> 00:03:49,980
Look at that as well, right?

52
00:03:54,010 --> 00:03:58,120
Let me create two boxes, one for design and one for the unsigned.

53
00:03:58,780 --> 00:04:03,790
Again, I'm creating a box for the signed and unsigned.

54
00:04:04,290 --> 00:04:07,330
Oh, this is it's a this is.

55
00:04:09,880 --> 00:04:15,010
Long and this has later entered into enters a smaller box.

56
00:04:16,590 --> 00:04:20,280
So led to this is your unsigned long.

57
00:04:21,090 --> 00:04:21,360
OK.

58
00:04:23,070 --> 00:04:24,960
And this is your.

59
00:04:26,850 --> 00:04:27,630
Signed long.

60
00:04:29,740 --> 00:04:31,720
That means it has 64 bits.

61
00:04:32,380 --> 00:04:34,180
This is your unsigned int.

62
00:04:36,420 --> 00:04:37,980
And this is your.

63
00:04:40,030 --> 00:04:41,620
Signed into right.

64
00:04:42,910 --> 00:04:49,980
Other discussed inside integers, the first bit is reserved for the saying OK, and the total capacity

65
00:04:49,980 --> 00:04:54,360
is 64 bits here and 64 bit right.

66
00:04:55,690 --> 00:04:57,160
Reverberates said as well, right?

67
00:04:58,430 --> 00:05:00,590
And here it is, 32 32bit.

68
00:05:01,950 --> 00:05:08,640
And had already started to engage over, indeed, because it is a four byte bucket and what it means

69
00:05:08,910 --> 00:05:09,360
two words.

70
00:05:10,350 --> 00:05:13,500
Now the first bit, you know, is reserved for cyanide.

71
00:05:14,040 --> 00:05:15,720
So in this case, it is very simple.

72
00:05:15,720 --> 00:05:18,150
All the 32 bit are used for the magnitude.

73
00:05:18,160 --> 00:05:22,140
So we have seen if you have 64 bit, the smallest number is zero.

74
00:05:22,710 --> 00:05:24,390
The largest number is oil ones.

75
00:05:24,510 --> 00:05:25,380
So that is of.

76
00:05:25,380 --> 00:05:32,400
The order to raise to the bar was 64 minus one, which is approximately of the order and barbarity and

77
00:05:32,400 --> 00:05:34,350
internal interchanges of untainted.

78
00:05:35,100 --> 00:05:35,610
It does.

79
00:05:35,610 --> 00:05:36,520
The minimum is zero.

80
00:05:36,550 --> 00:05:39,450
The largest is to raise to devour 32 minus one.

81
00:05:41,210 --> 00:05:44,190
But hit what what is going to change here?

82
00:05:44,230 --> 00:05:49,460
You don't have all the 64 bit available to represent the magnitude of the largest ballot.

83
00:05:50,600 --> 00:05:58,970
I would be you have only 63 bits, and the largest power would be of starting from zero up to two six

84
00:05:58,970 --> 00:05:59,620
to eight.

85
00:06:01,710 --> 00:06:07,800
Of this one, we're talking about what are the largest number that you can store with 64 bit the largest

86
00:06:07,800 --> 00:06:10,020
number is of the order to the 64.

87
00:06:11,310 --> 00:06:17,310
This in this case, the largest number would be to this to deprive a 63 and minus one, right?

88
00:06:18,000 --> 00:06:19,650
That is what it is going to be.

89
00:06:20,680 --> 00:06:23,290
And obviously, we can store the numbers from zero.

90
00:06:24,480 --> 00:06:29,150
But we can also store the negative numbers, OK, if we can also store the negative numbers, the the

91
00:06:29,160 --> 00:06:32,880
smallest negative number would be minus of two days to divide.

92
00:06:32,880 --> 00:06:33,450
63.

93
00:06:33,600 --> 00:06:33,830
OK.

94
00:06:34,380 --> 00:06:40,200
What actually happened is that age gets divided, half of the numbers are positive and half of the numbers

95
00:06:40,200 --> 00:06:40,740
are negative.

96
00:06:41,370 --> 00:06:48,630
If you talk about how many numbers you can represent using 64 bit, the number of numbers, the number

97
00:06:48,630 --> 00:06:54,020
of number, the stories to the politics differ because at every place we can have zero one that is doing

98
00:06:54,070 --> 00:06:57,330
to 22 multiplied by six multiplied 64 times.

99
00:06:57,540 --> 00:07:00,120
So we have 264 possible combinations.

100
00:07:01,520 --> 00:07:08,540
Out of which these many combinations, including the route, is to the bar 63, which are greater than

101
00:07:08,540 --> 00:07:12,830
equal to zero and starting from minus one minus two days to 63.

102
00:07:13,400 --> 00:07:17,720
We have these many which are negative to combining these two.

103
00:07:18,140 --> 00:07:20,690
It becomes 2.2, rated by 63.

104
00:07:21,370 --> 00:07:23,330
Just do this to the do so effectively.

105
00:07:23,330 --> 00:07:24,860
We have these many combinations.

106
00:07:26,080 --> 00:07:32,620
These many numbers can be represented using a 64 bit, indeed, similarly, for a 32 bit number, the

107
00:07:32,620 --> 00:07:40,270
largest number is to this to divide 31 minus one because effectively there are 31 bits for the magnitude

108
00:07:40,870 --> 00:07:44,300
and the smallest number is minus off to this department at 31.

109
00:07:44,320 --> 00:07:44,590
OK.

110
00:07:45,430 --> 00:07:47,470
And we have a zero in-between as well.

111
00:07:47,590 --> 00:07:51,850
Guess so we can store the positive numbers as well as negative numbers.

112
00:07:52,360 --> 00:07:54,970
That is where the slight difference comes in.

113
00:07:55,000 --> 00:08:00,010
So here the range is slightly higher towards the positive side and there is nothing on the negative

114
00:08:00,010 --> 00:08:00,280
side.

115
00:08:00,640 --> 00:08:07,480
But in case we have equal number of numbers on the positive and the negative side and the ranges.

116
00:08:09,230 --> 00:08:10,740
Less by a factor of two.

117
00:08:10,760 --> 00:08:15,680
On the positive side of that is the difference between the unsigned ones.

118
00:08:17,000 --> 00:08:25,100
And the sound once again, so I hope you have understood this concept of the range of integers, and

119
00:08:25,100 --> 00:08:26,270
that's all for this video.
