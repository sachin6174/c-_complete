1
00:00:01,380 --> 00:00:05,400
Everyone's in this lecture, we're going to look at the solution for this problem.

2
00:00:05,700 --> 00:00:13,050
OK, so first of all, we have to read and put OK, until now we have not seen how do we store a complete

3
00:00:13,050 --> 00:00:13,620
string?

4
00:00:14,130 --> 00:00:14,430
OK.

5
00:00:14,790 --> 00:00:17,280
And that is also not required for this problem.

6
00:00:17,370 --> 00:00:24,000
So what we actually need is we need to stored the current direction at any point during their time,

7
00:00:24,000 --> 00:00:24,130
right?

8
00:00:24,180 --> 00:00:27,650
So we don't need to store everything, we just need to store.

9
00:00:27,660 --> 00:00:31,530
And then the next end and then next and guess what we can do?

10
00:00:31,530 --> 00:00:37,290
We can put a loop until we don't read everything until the end of the line.

11
00:00:37,290 --> 00:00:40,650
Okay, so that means we have to read it in this new line, correct?

12
00:00:40,830 --> 00:00:43,380
So first, let's do the first part there.

13
00:00:43,380 --> 00:00:46,740
Just try to read the input and let us try to print it.

14
00:00:46,950 --> 00:00:53,960
Maybe what I can do, I can say just I'm going to store it a single later on today, so I can say it,

15
00:00:53,970 --> 00:00:54,330
guys.

16
00:00:54,330 --> 00:00:56,430
The edge that is equal to scene.

17
00:00:56,430 --> 00:01:02,040
Not great that I actually read the first letter on the first letter and I can divide.

18
00:01:02,050 --> 00:01:05,840
This character is not equal to a new line, correct?

19
00:01:05,880 --> 00:01:11,760
But I'm going to read the next letters I can to see it equals good.

20
00:01:12,850 --> 00:01:20,050
And after every letter that I've read, maybe I can print it to show you that how we are reading a sequence

21
00:01:20,050 --> 00:01:25,180
of letters or get what we can to see out C-H, maybe followed by Oklahoma it.

22
00:01:26,700 --> 00:01:30,870
I hate the good we have to first save the file.

23
00:01:30,900 --> 00:01:35,250
Maybe I can say shortest, but not CPB.

24
00:01:36,060 --> 00:01:37,620
And let's build a code.

25
00:01:37,860 --> 00:01:38,420
All right.

26
00:01:39,360 --> 00:01:40,630
And let's try to run it.

27
00:01:41,400 --> 00:01:47,790
Maybe I say and then and it says W. So yes, I'm able to read all the letters.

28
00:01:48,450 --> 00:01:50,790
Well, I don't reach the end of the line.

29
00:01:50,790 --> 00:01:52,850
OK, so I've put this in.

30
00:01:53,040 --> 00:01:55,600
There is a box lesson which is not visible to us.

31
00:01:55,620 --> 00:01:55,860
OK.

32
00:01:56,400 --> 00:02:04,920
And since we are using the same target method, it would be able to read facial letters like white spaces,

33
00:02:04,920 --> 00:02:06,430
including the box lesson.

34
00:02:07,260 --> 00:02:12,220
So we are saying, OK, read everything until you don't hit the end of the line.

35
00:02:12,350 --> 00:02:15,630
And every time we are reading one letter and we are printing it, OK?

36
00:02:16,110 --> 00:02:24,930
And what we have to do, we have to decide an action based on every input, OK, every letter that we

37
00:02:24,930 --> 00:02:25,230
read.

38
00:02:26,070 --> 00:02:29,780
Now, suppose we have no four directions, OK?

39
00:02:29,790 --> 00:02:37,410
We just have been that there are four directions north, south, east and west.

40
00:02:38,090 --> 00:02:40,860
Your letter can pick one of these values.

41
00:02:40,860 --> 00:02:42,390
OK, so you can say switch.

42
00:02:43,600 --> 00:02:52,090
It's put a Switch statement on our later that maybe you can now this can take the value night.

43
00:02:52,930 --> 00:02:53,710
What do you do?

44
00:02:54,160 --> 00:02:56,710
So you need to go in this direction.

45
00:02:56,740 --> 00:03:03,610
OK, you need to increment the way, and if you have East, you need to increment the X. If you have

46
00:03:04,240 --> 00:03:05,800
West, you have to decrement.

47
00:03:06,190 --> 00:03:09,430
And if you have south, you have to decremental the way.

48
00:03:09,820 --> 00:03:14,290
What I will do, I will keep you variables which are.

49
00:03:15,500 --> 00:03:22,190
Which are both set to zero in the beginning that denote we are standing currently here, OK, now if

50
00:03:22,190 --> 00:03:28,040
I get north, that means we have to go vertically up, so I increment way and break.

51
00:03:29,160 --> 00:03:43,230
If the case is south, I decrement why and break if the case is east, I increment X and I break on

52
00:03:43,230 --> 00:03:45,090
if the cases west.

53
00:03:46,640 --> 00:03:54,800
I decrement X and I break, OK, now we have handled the actions for each of the four cases.

54
00:03:55,310 --> 00:04:00,770
Finally, when we will come out of the loop, right, then we will come out of the loop.

55
00:04:01,190 --> 00:04:05,730
We will know the final displacement in terms of numbers where we want to go.

56
00:04:05,820 --> 00:04:13,730
So maybe you want to see out the final XS X and the Final Y is, let's say, the Y.

57
00:04:15,890 --> 00:04:22,910
It's political, and let us try to run this for a given, and let's head north, not north east.

58
00:04:22,940 --> 00:04:24,560
East, west and south.

59
00:04:25,250 --> 00:04:33,350
That means we have to move one unit towards the positive politics and we have to move two units towards

60
00:04:33,350 --> 00:04:33,890
the North.

61
00:04:34,010 --> 00:04:35,530
But just correct, OK, if it is correct.

62
00:04:35,580 --> 00:04:38,420
So we had the north once out.

63
00:04:38,420 --> 00:04:40,280
Effectively it becomes three minus one.

64
00:04:40,280 --> 00:04:49,100
That is, it times towards night and we had to east on one west, one west.

65
00:04:49,460 --> 00:04:55,610
Effectively, we have to move one two eight one times towards the East, if that is what we need to

66
00:04:55,610 --> 00:04:57,930
do now coming to the second part.

67
00:04:57,960 --> 00:05:00,350
Okay, so how do we convert these numbers?

68
00:05:01,650 --> 00:05:05,040
Into a string, okay, so again, you will have actually four cases.

69
00:05:05,640 --> 00:05:05,910
OK.

70
00:05:06,420 --> 00:05:10,230
Case one would be if both X and Y.

71
00:05:12,230 --> 00:05:17,000
If both of them are positive, that means we are talking about the Quadrant one.

72
00:05:17,900 --> 00:05:20,720
Basically, their direction is towards north and east.

73
00:05:20,870 --> 00:05:21,170
OK.

74
00:05:21,710 --> 00:05:26,810
That means if access to how much east you will print, you will print east two times.

75
00:05:26,820 --> 00:05:35,060
So maybe you're going to fall into some ground that is equal to zero boundless and equal to X plus plus

76
00:05:35,840 --> 00:05:37,190
and you can print.

77
00:05:39,080 --> 00:05:40,550
Eat these many times.

78
00:05:41,940 --> 00:05:45,530
And you have also you have to also print not rights of or not.

79
00:05:45,540 --> 00:05:47,220
You have to look at the count of.

80
00:05:48,120 --> 00:05:48,930
So you can say.

81
00:05:50,460 --> 00:05:55,530
But in count, equal to one pound less than equal to weigh less.

82
00:05:57,930 --> 00:06:01,260
You see out not right.

83
00:06:02,640 --> 00:06:10,640
OK, let me just build a good and as if you will have another case for the second quadrant, when X

84
00:06:10,650 --> 00:06:12,510
is negative, Y is positive.

85
00:06:13,140 --> 00:06:19,350
Another case and another case, OK, so I'm just going to leave these cases for you.

86
00:06:19,860 --> 00:06:21,000
You can load them up.

87
00:06:21,240 --> 00:06:21,570
OK.

88
00:06:22,030 --> 00:06:23,910
So basically, you have four quadrants.

89
00:06:24,060 --> 00:06:26,250
So in this quadrant, you go north and east.

90
00:06:26,610 --> 00:06:28,830
In this quadrant, you go north and west.

91
00:06:29,370 --> 00:06:31,530
In this quadrant, you have south and west.

92
00:06:32,160 --> 00:06:34,740
And in this quadrant, you have south and east.

93
00:06:34,890 --> 00:06:41,520
Get if if the values are, let's say, minus three minus two, it means you have to print west three

94
00:06:41,520 --> 00:06:44,760
times and you have to print south two times.

95
00:06:44,880 --> 00:06:45,150
OK.

96
00:06:45,570 --> 00:06:49,020
So this is what you need to do in in this quadrant.

97
00:06:49,140 --> 00:06:49,440
OK.

98
00:06:49,860 --> 00:06:54,000
So right now, I just handled the case for this quadrant, right?

99
00:06:55,220 --> 00:07:02,090
And I'm just going to commend these out, and definitely you can call them up because most of our work

100
00:07:02,090 --> 00:07:09,680
is already done and we have the goal and we we I can show you the shortest, but let's not not north

101
00:07:10,370 --> 00:07:19,340
and east, east, south and west we get CNN, which is the expected answer for this problem.

102
00:07:19,730 --> 00:07:20,360
All right.

103
00:07:20,990 --> 00:07:25,940
So it seems we are done and that's all for this video.

104
00:07:27,170 --> 00:07:29,240
So the learning thing was not.

105
00:07:30,430 --> 00:07:39,820
Even without storing the entire string, we could build a logic which processes each of these characters

106
00:07:39,820 --> 00:07:45,580
one by one and update the net displacement in X and Y coordinates.

107
00:07:46,130 --> 00:07:53,170
And from the net displacement, we're able to make up a list of characters that we're printing in the

108
00:07:53,740 --> 00:07:57,280
output, and that is the shortest bad problem for us.

109
00:07:57,550 --> 00:07:59,290
Thank you for watching this video.
