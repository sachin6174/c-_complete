1
00:00:01,440 --> 00:00:02,130
Hello, everyone.

2
00:00:02,370 --> 00:00:10,460
In this lecture, we'll talk about a library that is available as a form of header file photos and type

3
00:00:10,490 --> 00:00:15,660
tape, so this library provides us two kinds of functions to work on characters.

4
00:00:15,690 --> 00:00:18,370
One set of is called as testing function.

5
00:00:18,400 --> 00:00:24,740
Would you want to check whether the correct result digit or is it an uppercase or is it a space?

6
00:00:24,810 --> 00:00:25,110
OK?

7
00:00:25,380 --> 00:00:27,840
Similar to the one we have already done right.

8
00:00:28,230 --> 00:00:35,400
But now, instead of writing the logic by yourself, this library adopts the logic for checking what

9
00:00:35,400 --> 00:00:36,750
type of correct that it is.

10
00:00:36,750 --> 00:00:41,550
OK, so we have added in our own logic in the previous problem.

11
00:00:42,210 --> 00:00:50,040
Now, if you don't want to write such code on, you want to use a simple function that tells you whether

12
00:00:50,040 --> 00:00:54,780
this is a lowercase character or is it uppercase character or is it a space?

13
00:00:55,620 --> 00:01:04,260
You can use this library and a good reference, as you'll find on C++ dot coms, if they show you these

14
00:01:04,260 --> 00:01:12,570
are all the functions that are available and the other type of functions that are available as to load

15
00:01:12,570 --> 00:01:13,380
and to appear.

16
00:01:13,380 --> 00:01:18,300
So suppose you have a letter and you want to convert it into uppercase or a lowercase LED.

17
00:01:19,020 --> 00:01:22,460
You can use these methods which are available in this library.

18
00:01:22,470 --> 00:01:28,710
OK, so let me show you a quick demo of working with this library.

19
00:01:28,710 --> 00:01:34,620
OK, maybe I'll just call it as soon as you type demo or CPB, the first step would be to.

20
00:01:38,680 --> 00:01:41,910
Include the header file that is if you type.

21
00:01:42,690 --> 00:01:44,950
And now once you have the light, you can see.

22
00:01:46,760 --> 00:01:48,500
Maybe Seattle was, too.

23
00:01:51,540 --> 00:01:55,710
Upper arm Nicolas Cage and I can say is.

24
00:01:56,100 --> 00:02:01,290
OK, so I'm building the good, this dual function is a conversion function, OK?

25
00:02:01,830 --> 00:02:07,980
I'm going to show you the M1 for conversion function and if I go here and if I try to run, this could

26
00:02:08,430 --> 00:02:10,590
start like Caesar type demo.

27
00:02:11,160 --> 00:02:12,720
And let's it though later.

28
00:02:12,720 --> 00:02:23,610
Is it so I get the cavatelli as my output, or if I give small b or small white, I get the capital

29
00:02:23,610 --> 00:02:24,710
y as my output.

30
00:02:24,720 --> 00:02:29,940
OK, so that is what this dual power function it's going to do for us.

31
00:02:30,750 --> 00:02:41,610
The other type of functions they are so assigning functions you want to check if this letter is in uppercase

32
00:02:41,610 --> 00:02:43,290
or is it in lowercase.

33
00:02:43,620 --> 00:02:45,030
So you can check if.

34
00:02:48,710 --> 00:02:51,660
So maybe you can see if is a but.

35
00:02:51,740 --> 00:02:57,290
So let me just show you what what functions are there is up, but is a function on it except to look

36
00:02:57,290 --> 00:02:57,470
at it.

37
00:02:58,760 --> 00:03:02,880
It is going to run as a Boolean value, not is it a uppercase letter or not?

38
00:03:02,900 --> 00:03:05,720
Maybe if it is a uppercase letter, so.

39
00:03:06,760 --> 00:03:11,290
Maybe if is a put on, you give the little when to see out.

40
00:03:11,600 --> 00:03:13,660
Yes, it's uppercase.

41
00:03:15,210 --> 00:03:18,060
As if maybe you can take.

42
00:03:19,110 --> 00:03:21,000
Is it lower case or something like that?

43
00:03:21,150 --> 00:03:25,830
If it is lower, you can see out the vote.

44
00:03:26,790 --> 00:03:27,990
It's lower case.

45
00:03:29,480 --> 00:03:32,700
As maybe as if maybe you wanted to check if it is.

46
00:03:33,070 --> 00:03:34,610
Digit is digit.

47
00:03:36,000 --> 00:03:43,740
And Uganda sealed its digit and so on, so you can make more cases using these functions.

48
00:03:44,310 --> 00:03:46,530
And it's going to work as expected.

49
00:03:46,710 --> 00:03:50,100
So maybe I give five, so you can.

50
00:03:50,170 --> 00:03:52,400
It says it's a digital, it's a digit.

51
00:03:53,260 --> 00:04:01,320
And if I give Molly, it says it's in lowercase and by converting it into a garment, this is what the

52
00:04:01,320 --> 00:04:02,340
output looks like.

53
00:04:03,210 --> 00:04:06,680
So I hope you have understood how to use this library.

54
00:04:06,690 --> 00:04:09,390
Very simple library, all types of functions.

55
00:04:09,570 --> 00:04:14,670
One is a set of distinct functions you want to check if it is an alphabet, is it a digit?

56
00:04:14,670 --> 00:04:15,960
Is it a lowercase letter?

57
00:04:15,960 --> 00:04:17,100
Is it uppercase letter?

58
00:04:17,100 --> 00:04:18,030
Is it a space?

59
00:04:18,480 --> 00:04:19,710
Is it alphanumeric?

60
00:04:20,040 --> 00:04:20,310
OK.

61
00:04:21,460 --> 00:04:23,840
So this is the method alphanumeric means.

62
00:04:23,860 --> 00:04:26,080
Is it a letter or digit?

63
00:04:26,560 --> 00:04:27,900
It can be like one of these.

64
00:04:29,260 --> 00:04:32,720
And the second set of functions we have seen, there are two conversion functions.

65
00:04:32,740 --> 00:04:37,660
One is to convert it into uppercase and that is to convert Lotus.

66
00:04:38,530 --> 00:04:43,060
So that's all for this video and we have already seen the demo for this one.

67
00:04:43,780 --> 00:04:45,340
And thanks a lot for watching.
