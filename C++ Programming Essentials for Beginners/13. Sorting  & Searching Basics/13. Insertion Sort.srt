1
00:00:02,210 --> 00:00:06,890
Everyone in this lecture will talk about insurgents art, just another sorting algorithm.

2
00:00:07,460 --> 00:00:14,540
So and I know it's difficult to remember so many algorithms, so that's why I'm trying to relate these

3
00:00:15,380 --> 00:00:17,210
names with some examples.

4
00:00:17,660 --> 00:00:23,340
The idea of intelligence art, you can say, is inspired from playing off cards like a card game.

5
00:00:23,360 --> 00:00:29,150
So, for example, if you have certain cards in your hand and let's say they are already sorted, you

6
00:00:29,150 --> 00:00:32,120
have a card five, you have a card, seven you have a card eight.

7
00:00:32,600 --> 00:00:38,280
And maybe now if I give you a card six and I want you to insert it in the right index right place.

8
00:00:38,280 --> 00:00:38,900
So what do you do?

9
00:00:39,140 --> 00:00:39,400
OK.

10
00:00:40,400 --> 00:00:42,560
Let me start from the right and let's see.

11
00:00:42,570 --> 00:00:43,340
It is very good.

12
00:00:43,370 --> 00:00:50,270
So maybe put it aside in this big side and maybe create some space here between five and seven and you

13
00:00:50,270 --> 00:00:57,860
insert this card at this particular positions or basically becomes like five, six, seven and eight.

14
00:00:58,040 --> 00:00:58,310
OK.

15
00:00:58,460 --> 00:01:01,180
So this is exactly what we do in insertion site.

16
00:01:01,220 --> 00:01:06,760
And if you remember this example, you will never forget insertions are in your life.

17
00:01:09,760 --> 00:01:14,500
So we need to see how this algorithm is going to work on own dietary.

18
00:01:14,950 --> 00:01:20,730
So the idea, as I discussed, is to insert a card or a number in its correct position in the sorted.

19
00:01:20,740 --> 00:01:22,660
But what is this sorted by?

20
00:01:22,720 --> 00:01:23,850
What is this uncharted part?

21
00:01:23,860 --> 00:01:25,900
Let us look out through one example.

22
00:01:26,290 --> 00:01:32,410
It's a we again have a five, four, one, three and two.

23
00:01:32,440 --> 00:01:33,520
Let's say this.

24
00:01:33,520 --> 00:01:34,050
Is that it?

25
00:01:34,580 --> 00:01:36,910
What we will do will divide this error into two parts.

26
00:01:36,940 --> 00:01:43,390
Let's say this part the first element is sorted, but and this part is uncharted part.

27
00:01:43,390 --> 00:01:47,200
OK, so an array of single element will always be sorted one.

28
00:01:48,240 --> 00:01:50,600
So now what we're going to do, we are going to pick this number.

29
00:01:50,620 --> 00:01:52,750
We are going to start from, let's say, equal to one.

30
00:01:53,900 --> 00:01:59,150
And we are going to see at which position we can place for, OK, so we have a guard five.

31
00:01:59,910 --> 00:02:01,640
Where do you want to place for?

32
00:02:02,510 --> 00:02:05,690
So obviously, but what will come before faith?

33
00:02:05,720 --> 00:02:10,460
So what we will do, we will keep forward in a temporary memory.

34
00:02:10,460 --> 00:02:11,060
We will do OK.

35
00:02:11,620 --> 00:02:15,530
I have kept out for one three, two a lang.

36
00:02:15,560 --> 00:02:16,180
As it is.

37
00:02:16,190 --> 00:02:16,730
We are not.

38
00:02:16,910 --> 00:02:18,530
We are not touching them as of now.

39
00:02:19,100 --> 00:02:20,090
We are doubtful.

40
00:02:20,390 --> 00:02:24,890
And we said, OK, go back and create a position for four.

41
00:02:24,890 --> 00:02:28,790
OK, so we we can do five is greater than four, so we will copy five.

42
00:02:28,970 --> 00:02:31,280
OK, and we try to go back now.

43
00:02:31,280 --> 00:02:32,630
We can't go back any further.

44
00:02:32,990 --> 00:02:34,610
That means four will come here.

45
00:02:36,020 --> 00:02:41,270
OK, so now we have two elements which are sorted and we have three elements which are not sorted.

46
00:02:41,390 --> 00:02:47,030
Again, we will pick one and we'll say, OK, let us try to put one in the right position.

47
00:02:47,030 --> 00:02:50,540
So we see what we do.

48
00:02:50,550 --> 00:02:53,120
We put one in a temporary memory.

49
00:02:53,120 --> 00:02:58,160
Let's say we put we copy one somewhere and we create this position, OK?

50
00:02:59,290 --> 00:03:04,310
And we have Warren year, and obviously five is greater than one.

51
00:03:04,340 --> 00:03:06,640
So it will move one step ahead like this.

52
00:03:07,120 --> 00:03:08,770
We go back and check.

53
00:03:08,980 --> 00:03:11,650
Gone is for greater than 1.3.

54
00:03:11,650 --> 00:03:13,720
This support almost one step ahead.

55
00:03:14,020 --> 00:03:16,090
And finally, we end up at this position.

56
00:03:16,090 --> 00:03:17,620
OK, so we have moved faith.

57
00:03:17,620 --> 00:03:20,080
We have moved forward and this position is empty.

58
00:03:20,080 --> 00:03:22,270
And here we are going to insert one.

59
00:03:22,660 --> 00:03:26,770
OK, so this is how we get three elements which are now sorted.

60
00:03:26,980 --> 00:03:28,860
OK, next what we will do.

61
00:03:28,930 --> 00:03:29,650
We will talk.

62
00:03:30,100 --> 00:03:34,880
We have one, four or five or decided we have three two, but just not started.

63
00:03:35,230 --> 00:03:36,130
We pick this element.

64
00:03:36,220 --> 00:03:38,750
We try to insert three in the right position.

65
00:03:38,770 --> 00:03:39,550
So what we do?

66
00:03:40,600 --> 00:03:42,990
We got between a temporary memory.

67
00:03:43,030 --> 00:03:44,080
We make this empty.

68
00:03:44,530 --> 00:03:49,570
We have a five year and five is greater than three, so it moves one step ahead.

69
00:03:49,630 --> 00:03:53,990
So five comes here and we have we come back one step.

70
00:03:54,010 --> 00:03:58,330
We have a four year forward is greater than three.

71
00:03:58,340 --> 00:03:59,230
So four comes here.

72
00:03:59,560 --> 00:04:01,410
And one one already is here.

73
00:04:01,420 --> 00:04:04,240
OK, so we can create an empty slot at this position, OK?

74
00:04:04,720 --> 00:04:06,820
So we basically copy forward to the next position.

75
00:04:06,820 --> 00:04:11,410
We copy five to the next position and we have already copied Trina and Brittingham.

76
00:04:11,560 --> 00:04:15,310
Now we see we added one is one bigger than three.

77
00:04:15,320 --> 00:04:16,270
No, it's not.

78
00:04:16,390 --> 00:04:17,950
So we stop at this particular point.

79
00:04:17,950 --> 00:04:22,270
At this particular point, we the point that is our dislocation, OK?

80
00:04:22,840 --> 00:04:25,660
And we say, OK, let's put tree hood on.

81
00:04:25,660 --> 00:04:28,480
This is how we insert tree in its right position.

82
00:04:28,480 --> 00:04:30,100
So similar thing we will do for two.

83
00:04:30,220 --> 00:04:32,850
So we have one three four five.

84
00:04:33,920 --> 00:04:39,990
We copy doing a temporary memory and we keep on moving these elements one step ahead.

85
00:04:40,000 --> 00:04:42,340
So five goes here or was here.

86
00:04:42,340 --> 00:04:43,270
It becomes four.

87
00:04:43,690 --> 00:04:44,440
Three goes it.

88
00:04:44,440 --> 00:04:45,370
It becomes three.

89
00:04:45,610 --> 00:04:49,780
One will not go ahead because one is not greater than two civil potato here, so it will become one,

90
00:04:49,780 --> 00:04:51,490
two, three, four and five.

91
00:04:52,150 --> 00:04:57,220
OK, so I hope that it is clear that idea is very simple, and in the next lecture, it will become

92
00:04:57,220 --> 00:04:59,740
more clear once we discuss the implementation.

93
00:05:00,190 --> 00:05:02,680
So this is interchanged, let's see in the next little.
