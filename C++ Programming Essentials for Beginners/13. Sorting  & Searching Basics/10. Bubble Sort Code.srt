1
00:00:01,990 --> 00:00:06,670
Hello, everyone, and this lecture will discuss the implementation of global Typekit, so what we do

2
00:00:06,670 --> 00:00:11,800
is because last time was in the last video died, we will have two loops.

3
00:00:11,800 --> 00:00:19,900
The first loop will repeat some process, so that process will go on and minus one times in every such

4
00:00:19,900 --> 00:00:20,680
iteration.

5
00:00:20,680 --> 00:00:26,040
What we will do, we will pick the element at the front and it will push it towards the end of the edit,

6
00:00:26,050 --> 00:00:29,530
OK, or to the suitable position where it can fit.

7
00:00:30,010 --> 00:00:38,380
So we can see the far end times equal to one times less than equal to and minus one time C++.

8
00:00:38,860 --> 00:00:44,500
OK, and every time what we need to do, we need to do repeated swapping and we need to push the element

9
00:00:44,500 --> 00:00:46,260
in the right direction.

10
00:00:46,270 --> 00:00:46,510
OK?

11
00:00:46,870 --> 00:00:49,240
So do a repeated swapping.

12
00:00:49,660 --> 00:00:53,900
So for that, we said we will take a variable G that goes from zero.

13
00:00:54,430 --> 00:00:59,050
And for the first iteration, what it is going to do.

14
00:01:02,100 --> 00:01:06,840
So what we discussed was led to be of a five year, five four three two one.

15
00:01:07,320 --> 00:01:14,220
So what we will do will make comparison with for what it will become like four five three two one and

16
00:01:14,220 --> 00:01:16,200
then we will compare 5.3.

17
00:01:16,200 --> 00:01:19,620
It will become four five four three five two one.

18
00:01:19,980 --> 00:01:21,380
Then we'll compare these two.

19
00:01:21,390 --> 00:01:25,110
It will become four, three, two, five and one.

20
00:01:25,110 --> 00:01:26,640
Then we will compare these two, OK.

21
00:01:27,000 --> 00:01:34,080
So if you have any elements which are not sorted, OK, then you only need to go to the other index

22
00:01:34,590 --> 00:01:35,530
and minus two.

23
00:01:35,550 --> 00:01:35,950
OK.

24
00:01:35,970 --> 00:01:39,300
This is then minus two other, and this is the minus one other index.

25
00:01:39,990 --> 00:01:45,750
So when the value of time does one, we effectively want to go model in minus two, so that that means

26
00:01:45,750 --> 00:01:49,530
they should be less than equal to end minus times minus one.

27
00:01:49,870 --> 00:01:50,090
If.

28
00:01:51,220 --> 00:01:57,740
And we can see jobless plus, and since we have generalized this, this will work for all.

29
00:01:58,350 --> 00:01:58,840
All right.

30
00:01:59,470 --> 00:01:59,470
Okay.

31
00:01:59,860 --> 00:02:06,550
So we can check if the correct element that is AIG, if it is greater than the next element, a jobless

32
00:02:06,550 --> 00:02:13,080
one, then we are going to swab them so we can to swab edgy and plus one.

33
00:02:13,210 --> 00:02:13,840
That's it.

34
00:02:14,530 --> 00:02:20,320
And this is how we can do bubbles or together.

35
00:02:20,320 --> 00:02:20,790
That's it.

36
00:02:20,800 --> 00:02:22,240
That's the entire algorithm.

37
00:02:22,660 --> 00:02:29,200
And we are just going to repeat this work and minus one times, OK, repeat this work and minus one

38
00:02:29,740 --> 00:02:32,350
times and you will end up getting us started at it.

39
00:02:32,650 --> 00:02:33,580
As we discussed.

40
00:02:33,910 --> 00:02:37,060
Now, let us try to print all the elements of the city.

41
00:02:37,360 --> 00:02:44,260
OK, so we can to see out air and maybe followed by a comma.

42
00:02:45,290 --> 00:02:46,010
Well, the cold.

43
00:02:48,070 --> 00:02:48,460
OK.

44
00:02:48,640 --> 00:02:49,660
This should be.

45
00:02:50,950 --> 00:02:54,940
A let's make this as a and.

46
00:02:56,350 --> 00:02:58,330
This is for this is for.

47
00:02:59,610 --> 00:03:01,140
So this should be void.

48
00:03:03,510 --> 00:03:07,950
And we are done now if I run bubbles out here.

49
00:03:14,050 --> 00:03:15,800
So this should be ex.

50
00:03:17,900 --> 00:03:25,460
And now, if veteran rebels are dead and you can see we are getting this minus 12 minus two minus one

51
00:03:25,460 --> 00:03:27,950
one three three four five six.

52
00:03:28,400 --> 00:03:33,170
We are getting all the elements in the right order and we also have the breeding elements, negative

53
00:03:33,170 --> 00:03:33,620
elements.

54
00:03:34,070 --> 00:03:36,320
Everything is working just fine, OK?

55
00:03:36,870 --> 00:03:42,320
So I hope this court is clear and now we will discuss the next sorting algorithms in the next lecture.
