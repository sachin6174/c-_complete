1
00:00:02,050 --> 00:00:02,620
Everyone.

2
00:00:02,890 --> 00:00:06,520
Now we will discuss about the full sorting algorithm that is what told.

3
00:00:07,000 --> 00:00:12,490
So what is the expectation of the sorting algorithms or assorted algorithm will take input underwater?

4
00:00:12,510 --> 00:00:13,630
That always looks like this.

5
00:00:13,990 --> 00:00:20,620
And you can see these numbers that are used in any random audit, but we want to output those numbers

6
00:00:21,070 --> 00:00:24,070
in let's increase increasing order audit can be in decreasing order.

7
00:00:24,080 --> 00:00:27,670
So if it is an increasing order, this is how the output would look like.

8
00:00:28,000 --> 00:00:32,800
So this is what is the input and output of every sorting algorithm.

9
00:00:33,050 --> 00:00:37,200
Now let us talk about what first algorithm that is known as bubble type.

10
00:00:37,870 --> 00:00:42,970
So it has a very basic idea, like it's it's inspired.

11
00:00:42,970 --> 00:00:48,700
You can say it's inspired from the idea of forming bubbles when you hit the water.

12
00:00:49,030 --> 00:00:53,950
Or maybe you can use this example to remember, but holidays algorithm works, they'd say I have a beagle

13
00:00:53,950 --> 00:00:56,470
which contains water.

14
00:00:57,660 --> 00:01:03,210
And let's say Porter Bernard here, and we need this, we hit this up, OK?

15
00:01:03,570 --> 00:01:04,500
What is going to happen?

16
00:01:04,500 --> 00:01:09,180
You will see at the base of the beaker, small small bubbles will form.

17
00:01:09,570 --> 00:01:15,480
As these bubbles grow in size, they will move to the top of the beaker and explode.

18
00:01:16,080 --> 00:01:22,320
The similar kind of idea is there and bubble or what we do, take the larger element or take the larger

19
00:01:22,410 --> 00:01:27,430
element to the end of the eddy by repeatedly swapping with different elements.

20
00:01:27,480 --> 00:01:30,210
So I will show you how this actually works.

21
00:01:31,700 --> 00:01:34,940
So let us take an array of, let's say, four elements.

22
00:01:35,660 --> 00:01:40,010
Five, four, three, two and little one.

23
00:01:40,030 --> 00:01:41,960
Let's say we have an equal to five.

24
00:01:41,990 --> 00:01:43,550
We have five elements in the city.

25
00:01:44,090 --> 00:01:45,680
And what we will do, we will.

26
00:01:46,990 --> 00:01:48,100
Take the first element.

27
00:01:48,250 --> 00:01:56,110
OK, we will take this element and we will compare with the neighboring elements, so we see if five

28
00:01:56,110 --> 00:01:57,130
is greater than four.

29
00:01:57,160 --> 00:01:59,860
We will do repeated swapping with the neighbor.

30
00:02:00,250 --> 00:02:05,650
So Ford will come here and I will come here and we will still have three, two and one.

31
00:02:06,160 --> 00:02:10,630
Next time we are going to compare firing three and this five will move.

32
00:02:11,930 --> 00:02:12,380
Forward.

33
00:02:12,410 --> 00:02:20,450
OK, so we'll have four, three, five, two one next time we will compare these two and we will see

34
00:02:20,450 --> 00:02:24,080
it becomes four, three, two, five and one.

35
00:02:24,890 --> 00:02:32,810
Next time we will have five and one, we will compare and it will become four, three, two, one and

36
00:02:32,810 --> 00:02:33,110
five.

37
00:02:33,570 --> 00:02:40,100
So you can see this five was a little bubble and starting from the beginning of the edit, it moved

38
00:02:40,100 --> 00:02:41,390
towards the ending of that.

39
00:02:42,140 --> 00:02:43,400
This is what happened.

40
00:02:43,400 --> 00:02:46,000
And let's see our first iteration.

41
00:02:46,010 --> 00:02:52,200
OK, so when you used to nested loops one for the number of times we are going to do this work, OK?

42
00:02:52,790 --> 00:02:55,150
This is the work for the first time.

43
00:02:55,160 --> 00:02:55,820
What we did.

44
00:02:55,930 --> 00:02:58,940
OK, what would it be isolated from an index?

45
00:02:58,950 --> 00:03:00,230
Let's equal to zero.

46
00:03:00,680 --> 00:03:03,620
And we went to the index and minus two.

47
00:03:03,980 --> 00:03:04,310
OK.

48
00:03:04,790 --> 00:03:12,210
And every time what we did, we did a comparison between e.g. the data element and its neighboring element

49
00:03:12,440 --> 00:03:13,280
of G Plus one.

50
00:03:13,400 --> 00:03:13,690
OK.

51
00:03:14,510 --> 00:03:15,500
So this is what we did.

52
00:03:15,980 --> 00:03:19,220
Let us talk about what will happen in the next iteration.

53
00:03:19,340 --> 00:03:19,670
OK.

54
00:03:20,630 --> 00:03:23,060
Let's say we now have these elements.

55
00:03:24,650 --> 00:03:25,670
We have this eddy.

56
00:03:26,170 --> 00:03:28,190
Now the Element five is already sorted.

57
00:03:28,190 --> 00:03:29,900
OK, the Element five is already sorted.

58
00:03:30,020 --> 00:03:31,310
Now we have a smaller eddy.

59
00:03:31,340 --> 00:03:34,190
We don't need to make comparisons to land.

60
00:03:34,190 --> 00:03:37,880
Even if we make it will not change because five is the largest element.

61
00:03:38,120 --> 00:03:39,500
And it is always at the end.

62
00:03:40,100 --> 00:03:42,110
So we will have four three two one.

63
00:03:42,440 --> 00:03:43,280
This is the eddy.

64
00:03:43,580 --> 00:03:46,190
That means we need to start from index.

65
00:03:46,880 --> 00:03:47,570
I can see.

66
00:03:49,130 --> 00:03:50,760
We'll start from equal to zero.

67
00:03:51,200 --> 00:03:56,240
And we will go till this index that is n minus three will come before entry.

68
00:03:56,240 --> 00:04:05,480
It becomes three for the when one will compare four and it will become three to four and one, and then

69
00:04:05,480 --> 00:04:06,770
we can compare four and one.

70
00:04:06,770 --> 00:04:10,770
And it will become, let's say, body builders index.

71
00:04:10,790 --> 00:04:12,050
This is n minus three, OK?

72
00:04:13,980 --> 00:04:16,410
This is in minus three years.

73
00:04:18,400 --> 00:04:20,950
And minus one and minus two and then minus three, yes.

74
00:04:21,520 --> 00:04:25,390
So we will go to this element three to three.

75
00:04:26,080 --> 00:04:28,960
This is three, two, one and four.

76
00:04:29,050 --> 00:04:29,350
OK.

77
00:04:29,650 --> 00:04:34,540
Yes, we are going to this particular index, which is in minus three, the first and we went all in

78
00:04:34,540 --> 00:04:35,170
minus two.

79
00:04:35,860 --> 00:04:42,910
So I'm talking about the days going from zero till and minus three because we all need to go to the

80
00:04:42,910 --> 00:04:44,560
second last element, get in the city.

81
00:04:44,890 --> 00:04:46,090
That's the whole idea.

82
00:04:46,810 --> 00:04:52,650
So what we did, we built the bigger element that was fought and we pushed it towards the end towards

83
00:04:52,670 --> 00:04:53,340
correct index.

84
00:04:53,350 --> 00:04:53,620
OK?

85
00:04:54,210 --> 00:04:55,990
So it is now in the right place.

86
00:04:56,590 --> 00:05:03,370
This is what we do in the second or take a iteration of of the outlook that we're going to put.

87
00:05:03,760 --> 00:05:08,020
We again did the comparison between Egypt and Egypt plus one.

88
00:05:09,290 --> 00:05:11,420
Let's see what happens in the next iteration.

89
00:05:11,990 --> 00:05:18,110
Now we have these elements, which are like four, three, two and one, OK?

90
00:05:18,560 --> 00:05:24,050
We have three who earned one because in two alterations, two elements are already sorted.

91
00:05:24,170 --> 00:05:25,700
We have five in the right place.

92
00:05:25,700 --> 00:05:28,490
We have four in the right place, OK, four and five.

93
00:05:28,520 --> 00:05:30,620
They're already in the correct position.

94
00:05:30,620 --> 00:05:32,150
We're not going to talk about them.

95
00:05:32,150 --> 00:05:33,380
So this is an minus one.

96
00:05:33,380 --> 00:05:34,370
This is n minus two.

97
00:05:34,370 --> 00:05:35,450
This is then minus three.

98
00:05:35,930 --> 00:05:42,350
But we will just run the look till end minus four because at this position, we need next element to

99
00:05:42,350 --> 00:05:48,860
compare because we will not go to this element to get this element will always be considered because

100
00:05:48,860 --> 00:05:50,090
of this vector 80+.

101
00:05:50,360 --> 00:05:53,990
What we will do will compare three with two two wheels.

102
00:05:53,990 --> 00:05:55,970
OK, let's compare.

103
00:05:57,080 --> 00:06:06,920
Three would do if this happens, then it will become two commentary, OK, and then we will compare

104
00:06:06,920 --> 00:06:07,640
three and one.

105
00:06:07,640 --> 00:06:08,450
What will look?

106
00:06:08,600 --> 00:06:12,440
It will become two comma one and three.

107
00:06:12,710 --> 00:06:16,250
So now three is in the right place and we are done for this iteration.

108
00:06:16,250 --> 00:06:20,780
Okay, so this is what happens over time when we do repeated swapping.

109
00:06:21,080 --> 00:06:23,990
And finally, one more time, we need to do this work.

110
00:06:24,470 --> 00:06:30,020
So what we will do, we will say, OK, we now have only two elements in there that need to be sorted.

111
00:06:30,740 --> 00:06:36,200
So these two elements are when one and the rest of it that is already sorted, that is three, four

112
00:06:36,200 --> 00:06:36,590
or five.

113
00:06:37,310 --> 00:06:38,150
Start from here.

114
00:06:38,640 --> 00:06:42,470
I will say, OK, swap it AJ and AJ plus one.

115
00:06:42,470 --> 00:06:46,030
If the current element is bigger, then the next will evaporate.

116
00:06:46,110 --> 00:06:51,140
It becomes one commando and we will go all in minus, let's say, five.

117
00:06:52,110 --> 00:06:58,200
Only only this index will start from zero, and we end up in minus five, which is this index only.

118
00:06:58,950 --> 00:07:01,890
And yes, we are OK if we don't need to do any work.

119
00:07:02,490 --> 00:07:04,410
So that's it.

120
00:07:04,470 --> 00:07:04,990
That's it.

121
00:07:05,010 --> 00:07:07,830
And this is how out the final three looks like, OK?

122
00:07:08,820 --> 00:07:17,130
So one observation we need to make is in order to swab and minus one and the limits, OK, if you want

123
00:07:17,130 --> 00:07:26,370
to swap and element what you do, if you simply put and minus one element to the to the right or to

124
00:07:26,370 --> 00:07:31,560
the top, then the one element will be left here and that would be automatically the smallest so that

125
00:07:31,560 --> 00:07:35,220
we observe that one is left it and it is automatically the smallest element.

126
00:07:35,220 --> 00:07:40,170
OK, so effectively we need to do this entire process in minus one times.

127
00:07:41,100 --> 00:07:47,670
And in this process, every time we need to start from zero to index and we need to go to the end minus

128
00:07:48,150 --> 00:07:49,860
two minus, I attend.

129
00:07:50,060 --> 00:07:50,320
OK.

130
00:07:51,250 --> 00:07:52,830
OK, let's say I.

131
00:07:53,920 --> 00:07:57,160
OK, so I will write these conditions in the cold.

132
00:07:57,430 --> 00:07:58,630
It will be become more clear.

133
00:07:58,990 --> 00:08:05,110
Let's say this is the number of times the loop is running post and the loop is running.

134
00:08:05,110 --> 00:08:08,800
So we are going from zero to n minus two.

135
00:08:09,920 --> 00:08:11,240
Taking them to look is running.

136
00:08:11,390 --> 00:08:15,170
We are going from zero to n minus three all time, the loop is running.

137
00:08:15,170 --> 00:08:18,610
We are going from zero to n minus four and fourth time.

138
00:08:18,620 --> 00:08:20,480
We are going from zero to and minus five.

139
00:08:21,050 --> 00:08:24,730
Effectively, we are saying that your inner loop.

140
00:08:25,100 --> 00:08:25,340
Okay.

141
00:08:25,340 --> 00:08:30,560
So we have a loop four times and we will have a loop four g.

142
00:08:31,100 --> 00:08:34,820
The day will go from zero to end minus a minus.

143
00:08:35,690 --> 00:08:38,360
Something like this and minus one minus.

144
00:08:39,620 --> 00:08:40,310
Something like this.

145
00:08:40,310 --> 00:08:42,520
We are going to do OK.

146
00:08:42,650 --> 00:08:47,510
So if the value of times is one of a loop will go from zero to end minus two.

147
00:08:47,520 --> 00:08:51,830
If the Times is too of a loop will go from zero to and minus three.

148
00:08:52,670 --> 00:08:55,310
This is the whole idea of bubbles right now.

149
00:08:55,310 --> 00:09:00,530
I hope this algorithm is clear to you and in the next lecture we will discuss the good.

150
00:09:01,540 --> 00:09:02,050
They don't.
