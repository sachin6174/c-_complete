1
00:00:01,570 --> 00:00:04,760
Everyone, so let us see how we can, right, reprogram.

2
00:00:04,780 --> 00:00:13,510
So first of all, I will include some header files, and I'll stream is basically for doing input and

3
00:00:13,510 --> 00:00:18,910
output, so we will use it for scene and see out we are, which are the input and output statements

4
00:00:18,910 --> 00:00:19,750
in C++.

5
00:00:20,290 --> 00:00:21,190
So what we will do?

6
00:00:21,310 --> 00:00:22,480
Let's create the edit.

7
00:00:22,750 --> 00:00:28,480
So let's say we have an array of marks and let's say we are just creating it for denser and OK.

8
00:00:28,900 --> 00:00:36,250
Now we may ask the user, Okay, tell us how many students we want to give as input so I can do it and

9
00:00:36,250 --> 00:00:40,760
then CNN and maybe let us increase the size of that.

10
00:00:40,900 --> 00:00:44,710
That means we have reserved the memory for up 200 students.

11
00:00:45,220 --> 00:00:48,420
But we will ask, OK, how many students we get?

12
00:00:48,490 --> 00:00:49,540
We want to enter.

13
00:00:49,540 --> 00:00:52,030
OK, so enter the number of students.

14
00:00:53,230 --> 00:00:54,090
So that is OK.

15
00:00:54,100 --> 00:00:56,740
I want to enter the marks of five students.

16
00:00:57,250 --> 00:01:07,410
So what we will do, we will say OK board and I called to zero I less than an A-plus plus again.

17
00:01:07,420 --> 00:01:15,340
So give me the marks of I had student because we are storing the marks from zero to minus one.

18
00:01:15,850 --> 00:01:18,640
So this is how we are doing input.

19
00:01:19,810 --> 00:01:22,150
And let us do output as well.

20
00:01:22,690 --> 00:01:31,450
Again, default intake was to zero I less than an A-plus plus and again to see out marks off.

21
00:01:32,890 --> 00:01:37,530
And let's give a comma and maybe and.

22
00:01:39,330 --> 00:01:40,020
So that's it.

23
00:01:40,560 --> 00:01:41,760
Let's build a good.

24
00:01:43,910 --> 00:01:45,290
But less successful.

25
00:01:45,950 --> 00:01:47,580
And let us try to underscored.

26
00:01:49,580 --> 00:01:57,830
OK, I want to say I want to give marks of late to aid student only to the monks are 10, 12, 90,

27
00:01:58,250 --> 00:02:02,450
80, 32, 44, 66.

28
00:02:02,600 --> 00:02:02,960
OK.

29
00:02:04,390 --> 00:02:06,160
And maybe there won't be.

30
00:02:07,340 --> 00:02:12,260
So you can see we are getting these marks printed, so these are getting stored inside the memory.

31
00:02:12,710 --> 00:02:17,900
And then we are printing it, OK, now what we did is I will just give you a quick recap.

32
00:02:19,150 --> 00:02:28,900
So we made a very bold marks on this could have up 200 places, but we only used a small part of the

33
00:02:28,920 --> 00:02:29,260
city.

34
00:02:29,290 --> 00:02:31,140
OK, so this is 99.

35
00:02:31,150 --> 00:02:34,930
This is zero one two three four five six seven.

36
00:02:35,380 --> 00:02:38,590
We only used this much part of the.

37
00:02:40,660 --> 00:02:47,830
And restored Mark's hit, we are trading from zero in minus one that is seven to these are eight students.

38
00:02:48,250 --> 00:02:48,940
We said, OK.

39
00:02:49,750 --> 00:02:55,300
Big put these values and to store them, because when is it scene marks of zero?

40
00:02:55,750 --> 00:03:00,040
Whatever is the first input that will get stored in this particular value.

41
00:03:00,040 --> 00:03:03,100
So maybe later this is 80 80 will get stored in.

42
00:03:03,100 --> 00:03:07,900
Similarly, I'd seen on one enough to see marks of two marks of three Anton.

43
00:03:08,350 --> 00:03:10,120
Similarly, we are doing as the old year.

44
00:03:10,120 --> 00:03:13,990
OK, so this is all we can do input and output, OK?

45
00:03:14,620 --> 00:03:18,760
It will also happen that you want to take.

46
00:03:20,140 --> 00:03:21,640
Garden Wood from one, OK?

47
00:03:21,830 --> 00:03:23,650
So in that case, what are you going to do?

48
00:03:23,800 --> 00:03:30,430
You can say, OK, let us bring the values from one down and let us try to bring the values from one

49
00:03:30,430 --> 00:03:30,760
to one.

50
00:03:30,760 --> 00:03:35,230
And maybe you can say marks of zero equals minus one.

51
00:03:35,260 --> 00:03:36,640
Maybe this is not defined.

52
00:03:36,850 --> 00:03:38,350
You can also do something like this.

53
00:03:38,890 --> 00:03:40,690
You can assign a value.

54
00:03:41,080 --> 00:03:41,350
OK?

55
00:03:41,680 --> 00:03:48,520
Or maybe you can also do an update that every marks should be multiplied by two.

56
00:03:49,480 --> 00:03:53,650
Because of whatever marks you are getting should be multiplied by two.

57
00:03:53,680 --> 00:03:54,820
So you can to marks off.

58
00:03:55,240 --> 00:03:55,660
I.

59
00:03:56,940 --> 00:04:00,720
Equals marks off, I multiplied by two.

60
00:04:01,020 --> 00:04:08,550
Okay, so let us run this program again and see if I say I have only four students.

61
00:04:08,570 --> 00:04:15,420
Alexa marks are 10, 20, 30 and 40, so you can see we're getting the output 20, 40, 60 and 80.

62
00:04:15,420 --> 00:04:18,420
So we are able to update the values in the area.

63
00:04:18,750 --> 00:04:19,500
Now you may ask.

64
00:04:19,920 --> 00:04:21,220
We didn't get this value.

65
00:04:21,220 --> 00:04:21,570
Why?

66
00:04:22,290 --> 00:04:27,180
The reason is, although this value is getting stalled, but we're not printing it, we are starting

67
00:04:27,220 --> 00:04:28,650
of a look from equal to one.

68
00:04:29,100 --> 00:04:37,320
If I say this loop should start from zero, then you will see this value is also present.

69
00:04:37,590 --> 00:04:42,840
I have four student, let's say, 10, 20, 30 and 40, and you can do this minus one is present at

70
00:04:42,840 --> 00:04:43,080
zero.

71
00:04:43,080 --> 00:04:46,470
The index and the next two values are already there.

72
00:04:47,490 --> 00:04:47,720
OK.

73
00:04:48,210 --> 00:04:54,360
And what happens if I printed in less than 100 in that case?

74
00:04:55,080 --> 00:04:57,660
We have not done any initialization here.

75
00:04:57,810 --> 00:05:03,600
What we will see, we will see the remaining will use would be a garbage.

76
00:05:05,650 --> 00:05:09,250
So you can see we are getting these random values.

77
00:05:09,460 --> 00:05:17,050
So these are because we are printing below and we have not seen any value at that particular point because

78
00:05:17,110 --> 00:05:19,030
this is nothing but garbage.

79
00:05:19,540 --> 00:05:26,080
But one thing we discussed, if we do the initialization of the eddy, then the remaining garbage will

80
00:05:26,080 --> 00:05:27,340
become equal to zero.

81
00:05:27,350 --> 00:05:32,440
So if I say OK, initialize the city with the first value is zero.

82
00:05:32,770 --> 00:05:37,560
So if you do initialization of some element, then the remaining element automatically becomes zero.

83
00:05:37,580 --> 00:05:43,810
OK, so even if you pull the minus one here and you remove the statement, you will see the remaining

84
00:05:44,800 --> 00:05:51,120
elements of the eddy would automatically take this value of zero.

85
00:05:51,130 --> 00:05:51,520
Or guess what?

86
00:05:51,520 --> 00:05:53,350
LED to 10, 20, 30 and 40.

87
00:05:53,860 --> 00:05:57,520
And you can see the remaining elements are always zero in this case, OK?

88
00:05:57,970 --> 00:06:03,580
I hope you understood all these aspects of creating, updating input and output offer.

89
00:06:03,940 --> 00:06:04,300
Eddy.

90
00:06:04,570 --> 00:06:06,100
Let's see the next it.
